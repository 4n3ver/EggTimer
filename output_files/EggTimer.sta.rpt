TimeQuest Timing Analyzer report for EggTimer
Wed Sep 30 20:59:12 2015
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'Controller:fsm|state[0]'
 12. Slow Model Setup: 'CLOCK_50'
 13. Slow Model Hold: 'CLOCK_50'
 14. Slow Model Hold: 'Controller:fsm|state[0]'
 15. Slow Model Minimum Pulse Width: 'CLOCK_50'
 16. Slow Model Minimum Pulse Width: 'Controller:fsm|state[0]'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'Controller:fsm|state[0]'
 27. Fast Model Setup: 'CLOCK_50'
 28. Fast Model Hold: 'CLOCK_50'
 29. Fast Model Hold: 'Controller:fsm|state[0]'
 30. Fast Model Minimum Pulse Width: 'CLOCK_50'
 31. Fast Model Minimum Pulse Width: 'Controller:fsm|state[0]'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; EggTimer                                                          ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                           ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; Clock Name              ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                     ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; CLOCK_50                ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 }                ;
; Controller:fsm|state[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { Controller:fsm|state[0] } ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                                                ;
+------------+-----------------+-------------------------+---------------------------------------------------------------+
; Fmax       ; Restricted Fmax ; Clock Name              ; Note                                                          ;
+------------+-----------------+-------------------------+---------------------------------------------------------------+
; INF MHz    ; 182.08 MHz      ; Controller:fsm|state[0] ; limit due to hold check                                       ;
; 406.34 MHz ; 380.08 MHz      ; CLOCK_50                ; limit due to minimum period restriction (max I/O toggle rate) ;
+------------+-----------------+-------------------------+---------------------------------------------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------------------------+
; Slow Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -1.997 ; -42.239       ;
; CLOCK_50                ; -1.461 ; -3.600        ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -3.109 ; -6.758        ;
; Controller:fsm|state[0] ; -2.746 ; -2.746        ;
+-------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Slow Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.631 ; -5.297        ;
; Controller:fsm|state[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'Controller:fsm|state[0]'                                                                                                   ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -1.997 ; Controller:fsm|state[2] ; HEX2[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.625      ; 1.937      ;
; -1.946 ; Controller:fsm|state[2] ; HEX3[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.453      ; 1.856      ;
; -1.912 ; Controller:fsm|state[2] ; HEX3[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.602      ; 1.877      ;
; -1.870 ; Controller:fsm|state[2] ; HEX2[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.617      ; 1.802      ;
; -1.856 ; Controller:fsm|state[2] ; HEX2[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.617      ; 1.788      ;
; -1.818 ; Controller:fsm|state[2] ; HEX2[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.618      ; 1.791      ;
; -1.793 ; Controller:fsm|state[2] ; HEX2[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.625      ; 1.764      ;
; -1.776 ; Controller:fsm|state[2] ; HEX3[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.625      ; 1.764      ;
; -1.738 ; Controller:fsm|state[2] ; HEX2[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.451      ; 1.693      ;
; -1.712 ; Controller:fsm|state[2] ; HEX3[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.601      ; 1.667      ;
; -1.516 ; Controller:fsm|state[2] ; HEX3[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.494      ; 1.507      ;
; -1.512 ; Controller:fsm|state[2] ; HEX3[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.495      ; 1.502      ;
; -1.504 ; Controller:fsm|state[2] ; HEX2[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.494      ; 1.489      ;
; -1.497 ; Controller:fsm|state[2] ; HEX0[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.631      ; 1.937      ;
; -1.410 ; Controller:fsm|state[2] ; HEX1[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.494      ; 1.862      ;
; -1.378 ; Controller:fsm|state[2] ; HEX1[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.494      ; 1.867      ;
; -1.378 ; Controller:fsm|state[2] ; HEX3[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.607      ; 1.340      ;
; -1.352 ; Controller:fsm|state[2] ; HEX0[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.618      ; 1.788      ;
; -1.340 ; Controller:fsm|state[2] ; HEX0[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.618      ; 1.805      ;
; -1.338 ; Controller:fsm|state[2] ; HEX0[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.628      ; 1.767      ;
; -1.329 ; Controller:fsm|state[2] ; HEX0[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.613      ; 1.793      ;
; -1.298 ; Controller:fsm|state[2] ; HEX0[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.443      ; 1.695      ;
; -1.278 ; Controller:fsm|state[2] ; HEX1[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.631      ; 1.765      ;
; -1.259 ; Controller:fsm|state[2] ; HEX1[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.494      ; 1.710      ;
; -1.236 ; Controller:fsm|state[2] ; HEX1[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.619      ; 1.669      ;
; -1.087 ; Controller:fsm|state[2] ; HEX1[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.473      ; 1.505      ;
; -1.065 ; Controller:fsm|state[2] ; HEX0[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.474      ; 1.492      ;
; -1.044 ; Controller:fsm|state[2] ; HEX1[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.473      ; 1.508      ;
; 2.098  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 3.308      ; 0.839      ;
; 2.598  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 3.308      ; 0.839      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                 ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; -1.461 ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.011     ; 2.488      ;
; -1.423 ; Controller:fsm|state[2] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 2.461      ;
; -1.214 ; Controller:fsm|state[1] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 2.252      ;
; -1.159 ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.011     ; 2.186      ;
; -0.716 ; Controller:fsm|state[1] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 1.754      ;
; -0.393 ; Controller:fsm|state[2] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 1.431      ;
; 1.686  ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 3.288      ; 2.417      ;
; 1.741  ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 3.277      ; 2.351      ;
; 2.083  ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 3.288      ; 2.020      ;
; 2.186  ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 3.288      ; 2.417      ;
; 2.241  ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 3.277      ; 2.351      ;
; 2.583  ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 3.288      ; 2.020      ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                 ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                 ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; -3.109 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 3.277      ; 0.731      ;
; -2.609 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 3.277      ; 0.731      ;
; -1.831 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 3.288      ; 2.020      ;
; -1.818 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 3.288      ; 2.033      ;
; -1.331 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 3.288      ; 2.020      ;
; -1.318 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 3.288      ; 2.033      ;
; 0.445  ; Controller:fsm|state[1] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 1.145  ; Controller:fsm|state[2] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 1.431      ;
; 1.468  ; Controller:fsm|state[1] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 1.754      ;
; 1.648  ; Controller:fsm|state[2] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 1.934      ;
; 1.668  ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.011     ; 1.943      ;
; 1.895  ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.011     ; 2.170      ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'Controller:fsm|state[0]'                                                                                                    ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -2.746 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 3.308      ; 0.839      ;
; -2.246 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 3.308      ; 0.839      ;
; 1.018  ; Controller:fsm|state[2] ; HEX0[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.474      ; 1.492      ;
; 1.032  ; Controller:fsm|state[2] ; HEX1[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.473      ; 1.505      ;
; 1.035  ; Controller:fsm|state[2] ; HEX1[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.473      ; 1.508      ;
; 1.050  ; Controller:fsm|state[2] ; HEX1[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.619      ; 1.669      ;
; 1.134  ; Controller:fsm|state[2] ; HEX1[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.631      ; 1.765      ;
; 1.139  ; Controller:fsm|state[2] ; HEX0[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.628      ; 1.767      ;
; 1.170  ; Controller:fsm|state[2] ; HEX0[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.618      ; 1.788      ;
; 1.180  ; Controller:fsm|state[2] ; HEX0[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.613      ; 1.793      ;
; 1.187  ; Controller:fsm|state[2] ; HEX0[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.618      ; 1.805      ;
; 1.216  ; Controller:fsm|state[2] ; HEX1[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.494      ; 1.710      ;
; 1.233  ; Controller:fsm|state[2] ; HEX3[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.607      ; 1.340      ;
; 1.252  ; Controller:fsm|state[2] ; HEX0[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.443      ; 1.695      ;
; 1.306  ; Controller:fsm|state[2] ; HEX0[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.631      ; 1.937      ;
; 1.368  ; Controller:fsm|state[2] ; HEX1[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.494      ; 1.862      ;
; 1.373  ; Controller:fsm|state[2] ; HEX1[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.494      ; 1.867      ;
; 1.495  ; Controller:fsm|state[2] ; HEX2[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.494      ; 1.489      ;
; 1.507  ; Controller:fsm|state[2] ; HEX3[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.495      ; 1.502      ;
; 1.513  ; Controller:fsm|state[2] ; HEX3[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.494      ; 1.507      ;
; 1.566  ; Controller:fsm|state[2] ; HEX3[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.601      ; 1.667      ;
; 1.639  ; Controller:fsm|state[2] ; HEX3[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.625      ; 1.764      ;
; 1.639  ; Controller:fsm|state[2] ; HEX2[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.625      ; 1.764      ;
; 1.671  ; Controller:fsm|state[2] ; HEX2[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.617      ; 1.788      ;
; 1.673  ; Controller:fsm|state[2] ; HEX2[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.618      ; 1.791      ;
; 1.685  ; Controller:fsm|state[2] ; HEX2[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.617      ; 1.802      ;
; 1.742  ; Controller:fsm|state[2] ; HEX2[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.451      ; 1.693      ;
; 1.775  ; Controller:fsm|state[2] ; HEX3[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.602      ; 1.877      ;
; 1.812  ; Controller:fsm|state[2] ; HEX2[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.625      ; 1.937      ;
; 1.903  ; Controller:fsm|state[2] ; HEX3[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.453      ; 1.856      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                  ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                  ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[2] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[2]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[2]|clk        ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'Controller:fsm|state[0]'                                                             ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target              ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[3]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[3]$latch|datad ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 6.534 ; 6.534 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 5.897 ; 5.897 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 6.247 ; 6.247 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 6.534 ; 6.534 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 3.457 ; 3.457 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 3.457 ; 3.457 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 3.397 ; 3.397 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 3.262 ; 3.262 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 3.019 ; 3.019 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 3.326 ; 3.326 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 3.298 ; 3.298 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 2.970 ; 2.970 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 2.712 ; 2.712 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 3.412 ; 3.412 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 3.412 ; 3.412 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 3.352 ; 3.352 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 3.202 ; 3.202 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 2.959 ; 2.959 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 2.945 ; 2.945 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.917 ; 2.917 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 2.589 ; 2.589 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 2.331 ; 2.331 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -5.077 ; -5.077 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -5.077 ; -5.077 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -5.256 ; -5.256 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -6.039 ; -6.039 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.104  ; 0.104  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -1.366 ; -1.366 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.878 ; -0.878 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -1.168 ; -1.168 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.303 ; -0.303 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.665 ; -0.665 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.449 ; -0.449 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.842 ; -0.842 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.104  ; 0.104  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.069  ; 0.069  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -1.343 ; -1.343 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.868 ; -0.868 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -1.169 ; -1.169 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.301 ; -0.301 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.567 ; -0.567 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.465 ; -0.465 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.858 ; -0.858 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.069  ; 0.069  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 8.584  ; 8.584  ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 8.584  ; 8.584  ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 7.271  ; 7.271  ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 7.633  ; 7.633  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 7.568  ; 7.568  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 7.625  ; 7.625  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 7.367  ; 7.367  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 7.606  ; 7.606  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 7.633  ; 7.633  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 7.284  ; 7.284  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 7.362  ; 7.362  ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 8.004  ; 8.004  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 8.004  ; 8.004  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 7.737  ; 7.737  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 7.734  ; 7.734  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 7.717  ; 7.717  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 7.644  ; 7.644  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 7.786  ; 7.786  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 7.909  ; 7.909  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 10.391 ; 10.391 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.391 ; 10.391 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.045 ; 10.045 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 9.321  ; 9.321  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 9.691  ; 9.691  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 9.864  ; 9.864  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 9.681  ; 9.681  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 9.681  ; 9.681  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 9.864  ; 9.864  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.035 ; 10.035 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 9.623  ; 9.623  ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 4.351  ;        ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 4.351  ;        ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 8.233  ; 8.233  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 7.620  ; 7.620  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 7.613  ; 7.613  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 7.784  ; 7.784  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 7.659  ; 7.659  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 8.233  ; 8.233  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 7.628  ; 7.628  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 8.024  ; 8.024  ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 8.405  ; 8.405  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 7.732  ; 7.732  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 8.389  ; 8.389  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 8.405  ; 8.405  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 7.702  ; 7.702  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 7.261  ; 7.261  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 7.771  ; 7.771  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 8.248  ; 8.248  ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;        ; 4.351  ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;        ; 4.351  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 7.271  ; 7.271  ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 8.584  ; 8.584  ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 7.271  ; 7.271  ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 7.284  ; 7.284  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 7.568  ; 7.568  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 7.625  ; 7.625  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 7.367  ; 7.367  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 7.606  ; 7.606  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 7.633  ; 7.633  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 7.284  ; 7.284  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 7.362  ; 7.362  ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 7.644  ; 7.644  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 8.004  ; 8.004  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 7.737  ; 7.737  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 7.734  ; 7.734  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 7.717  ; 7.717  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 7.644  ; 7.644  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 7.786  ; 7.786  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 7.909  ; 7.909  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 9.321  ; 9.321  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.391 ; 10.391 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.045 ; 10.045 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 9.321  ; 9.321  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 9.691  ; 9.691  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 9.864  ; 9.864  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 9.681  ; 9.681  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 9.681  ; 9.681  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 9.864  ; 9.864  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.035 ; 10.035 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 9.623  ; 9.623  ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 4.351  ;        ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 4.351  ;        ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 7.613  ; 7.613  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 7.620  ; 7.620  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 7.613  ; 7.613  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 7.784  ; 7.784  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 7.659  ; 7.659  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 8.233  ; 8.233  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 7.628  ; 7.628  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 8.024  ; 8.024  ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 7.261  ; 7.261  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 7.732  ; 7.732  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 8.389  ; 8.389  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 8.405  ; 8.405  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 7.702  ; 7.702  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 7.261  ; 7.261  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 7.771  ; 7.771  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 8.248  ; 8.248  ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;        ; 4.351  ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;        ; 4.351  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------+
; Fast Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -0.215 ; -1.534        ;
; CLOCK_50                ; 0.069  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.496 ; -3.630        ;
; Controller:fsm|state[0] ; -0.970 ; -0.970        ;
+-------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Fast Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.380 ; -4.380        ;
; Controller:fsm|state[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'Controller:fsm|state[0]'                                                                                                   ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -0.215 ; Controller:fsm|state[2] ; HEX2[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.465      ; 0.777      ;
; -0.175 ; Controller:fsm|state[2] ; HEX3[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.402      ; 0.725      ;
; -0.169 ; Controller:fsm|state[2] ; HEX3[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.454      ; 0.736      ;
; -0.151 ; Controller:fsm|state[2] ; HEX2[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.458      ; 0.706      ;
; -0.140 ; Controller:fsm|state[2] ; HEX2[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.459      ; 0.696      ;
; -0.136 ; Controller:fsm|state[2] ; HEX2[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.465      ; 0.705      ;
; -0.131 ; Controller:fsm|state[2] ; HEX2[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.459      ; 0.699      ;
; -0.128 ; Controller:fsm|state[2] ; HEX3[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.465      ; 0.706      ;
; -0.114 ; Controller:fsm|state[2] ; HEX3[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.452      ; 0.674      ;
; -0.104 ; Controller:fsm|state[2] ; HEX2[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.398      ; 0.663      ;
; -0.029 ; Controller:fsm|state[2] ; HEX3[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.425      ; 0.612      ;
; -0.023 ; Controller:fsm|state[2] ; HEX3[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.426      ; 0.606      ;
; -0.019 ; Controller:fsm|state[2] ; HEX2[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.425      ; 0.598      ;
; 0.021  ; Controller:fsm|state[2] ; HEX3[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.455      ; 0.543      ;
; 0.280  ; Controller:fsm|state[2] ; HEX0[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.461      ; 0.778      ;
; 0.333  ; Controller:fsm|state[2] ; HEX1[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.417      ; 0.726      ;
; 0.343  ; Controller:fsm|state[2] ; HEX0[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.458      ; 0.708      ;
; 0.346  ; Controller:fsm|state[2] ; HEX1[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.417      ; 0.723      ;
; 0.348  ; Controller:fsm|state[2] ; HEX0[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.451      ; 0.709      ;
; 0.354  ; Controller:fsm|state[2] ; HEX0[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.447      ; 0.701      ;
; 0.357  ; Controller:fsm|state[2] ; HEX0[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.451      ; 0.696      ;
; 0.366  ; Controller:fsm|state[2] ; HEX1[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.461      ; 0.706      ;
; 0.366  ; Controller:fsm|state[2] ; HEX0[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.386      ; 0.659      ;
; 0.379  ; Controller:fsm|state[2] ; HEX1[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.454      ; 0.675      ;
; 0.390  ; Controller:fsm|state[2] ; HEX1[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.417      ; 0.668      ;
; 0.434  ; Controller:fsm|state[2] ; HEX1[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.404      ; 0.604      ;
; 0.447  ; Controller:fsm|state[2] ; HEX1[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.404      ; 0.606      ;
; 0.449  ; Controller:fsm|state[2] ; HEX0[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.405      ; 0.595      ;
; 1.079  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 1.194      ; 0.365      ;
; 1.579  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 1.194      ; 0.365      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                               ;
+-------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack ; From Node               ; To Node                 ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; 0.069 ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.005     ; 0.958      ;
; 0.088 ; Controller:fsm|state[2] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.944      ;
; 0.159 ; Controller:fsm|state[1] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.873      ;
; 0.168 ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.005     ; 0.859      ;
; 0.338 ; Controller:fsm|state[1] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.694      ;
; 0.447 ; Controller:fsm|state[2] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.585      ;
; 1.329 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.575      ; 0.919      ;
; 1.338 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.570      ; 0.905      ;
; 1.450 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.575      ; 0.798      ;
; 1.829 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.575      ; 0.919      ;
; 1.838 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.570      ; 0.905      ;
; 1.950 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.575      ; 0.798      ;
+-------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                 ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                 ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; -1.496 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.570      ; 0.367      ;
; -1.070 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.575      ; 0.798      ;
; -1.064 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.575      ; 0.804      ;
; -0.996 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.570      ; 0.367      ;
; -0.570 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.575      ; 0.798      ;
; -0.564 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.575      ; 0.804      ;
; 0.215  ; Controller:fsm|state[1] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.433  ; Controller:fsm|state[2] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.585      ;
; 0.542  ; Controller:fsm|state[1] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.694      ;
; 0.613  ; Controller:fsm|state[2] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.765      ;
; 0.623  ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.005     ; 0.770      ;
; 0.703  ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.005     ; 0.850      ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'Controller:fsm|state[0]'                                                                                                    ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -0.970 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 1.194      ; 0.365      ;
; -0.470 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 1.194      ; 0.365      ;
; 0.190  ; Controller:fsm|state[2] ; HEX0[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.405      ; 0.595      ;
; 0.200  ; Controller:fsm|state[2] ; HEX1[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.404      ; 0.604      ;
; 0.202  ; Controller:fsm|state[2] ; HEX1[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.404      ; 0.606      ;
; 0.221  ; Controller:fsm|state[2] ; HEX1[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.454      ; 0.675      ;
; 0.245  ; Controller:fsm|state[2] ; HEX1[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.461      ; 0.706      ;
; 0.245  ; Controller:fsm|state[2] ; HEX0[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.451      ; 0.696      ;
; 0.250  ; Controller:fsm|state[2] ; HEX0[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.458      ; 0.708      ;
; 0.251  ; Controller:fsm|state[2] ; HEX1[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.417      ; 0.668      ;
; 0.254  ; Controller:fsm|state[2] ; HEX0[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.447      ; 0.701      ;
; 0.258  ; Controller:fsm|state[2] ; HEX0[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.451      ; 0.709      ;
; 0.273  ; Controller:fsm|state[2] ; HEX0[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.386      ; 0.659      ;
; 0.306  ; Controller:fsm|state[2] ; HEX1[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.417      ; 0.723      ;
; 0.309  ; Controller:fsm|state[2] ; HEX1[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.417      ; 0.726      ;
; 0.317  ; Controller:fsm|state[2] ; HEX0[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.461      ; 0.778      ;
; 0.588  ; Controller:fsm|state[2] ; HEX3[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.455      ; 0.543      ;
; 0.673  ; Controller:fsm|state[2] ; HEX2[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.425      ; 0.598      ;
; 0.680  ; Controller:fsm|state[2] ; HEX3[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.426      ; 0.606      ;
; 0.687  ; Controller:fsm|state[2] ; HEX3[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.425      ; 0.612      ;
; 0.722  ; Controller:fsm|state[2] ; HEX3[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.452      ; 0.674      ;
; 0.737  ; Controller:fsm|state[2] ; HEX2[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.459      ; 0.696      ;
; 0.740  ; Controller:fsm|state[2] ; HEX2[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.459      ; 0.699      ;
; 0.740  ; Controller:fsm|state[2] ; HEX2[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.465      ; 0.705      ;
; 0.741  ; Controller:fsm|state[2] ; HEX3[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.465      ; 0.706      ;
; 0.748  ; Controller:fsm|state[2] ; HEX2[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.458      ; 0.706      ;
; 0.765  ; Controller:fsm|state[2] ; HEX2[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.398      ; 0.663      ;
; 0.782  ; Controller:fsm|state[2] ; HEX3[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.454      ; 0.736      ;
; 0.812  ; Controller:fsm|state[2] ; HEX2[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.465      ; 0.777      ;
; 0.823  ; Controller:fsm|state[2] ; HEX3[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.402      ; 0.725      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                  ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                  ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[2] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[2]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[2]|clk        ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'Controller:fsm|state[0]'                                                             ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target              ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[3]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[3]$latch|datad ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 3.270 ; 3.270 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 3.027 ; 3.027 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 3.144 ; 3.144 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 3.270 ; 3.270 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.976 ; 0.976 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.976 ; 0.976 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.929 ; 0.929 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.902 ; 0.902 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.804 ; 0.804 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.916 ; 0.916 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.874 ; 0.874 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.756 ; 0.756 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.572 ; 0.572 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.955 ; 0.955 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.955 ; 0.955 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.908 ; 0.908 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.872 ; 0.872 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.774 ; 0.774 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.785 ; 0.785 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.743 ; 0.743 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.625 ; 0.625 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.441 ; 0.441 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -2.713 ; -2.713 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -2.713 ; -2.713 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -2.755 ; -2.755 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -3.060 ; -3.060 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.417  ; 0.417  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.260 ; -0.260 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.045 ; -0.045 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.204 ; -0.204 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.139  ; 0.139  ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.011 ; -0.011 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.122  ; 0.122  ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.041 ; -0.041 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.417  ; 0.417  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.403  ; 0.403  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.243 ; -0.243 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.037 ; -0.037 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.196 ; -0.196 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.149  ; 0.149  ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.013  ; 0.013  ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.121  ; 0.121  ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.042 ; -0.042 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.403  ; 0.403  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                      ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 4.059 ; 4.059 ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 4.059 ; 4.059 ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 3.485 ; 3.485 ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 3.794 ; 3.794 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 3.746 ; 3.746 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 3.787 ; 3.787 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 3.686 ; 3.686 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 3.774 ; 3.774 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 3.794 ; 3.794 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 3.662 ; 3.662 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 3.685 ; 3.685 ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 3.938 ; 3.938 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 3.938 ; 3.938 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 3.827 ; 3.827 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 3.826 ; 3.826 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 3.818 ; 3.818 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 3.804 ; 3.804 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 3.876 ; 3.876 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 3.911 ; 3.911 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.369 ; 4.369 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.369 ; 4.369 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.231 ; 4.231 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 3.944 ; 3.944 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.100 ; 4.100 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.212 ; 4.212 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.090 ; 4.090 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.090 ; 4.090 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.212 ; 4.212 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.221 ; 4.221 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.037 ; 4.037 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 2.087 ;       ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 2.087 ;       ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 4.033 ; 4.033 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 3.791 ; 3.791 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 3.786 ; 3.786 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 3.881 ; 3.881 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 3.830 ; 3.830 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 4.033 ; 4.033 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 3.799 ; 3.799 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 3.948 ; 3.948 ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 4.162 ; 4.162 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 3.842 ; 3.842 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 4.149 ; 4.149 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 4.162 ; 4.162 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 3.818 ; 3.818 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 3.646 ; 3.646 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 3.867 ; 3.867 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 4.044 ; 4.044 ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;       ; 2.087 ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;       ; 2.087 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 3.485 ; 3.485 ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 4.059 ; 4.059 ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 3.485 ; 3.485 ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 3.662 ; 3.662 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 3.746 ; 3.746 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 3.787 ; 3.787 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 3.686 ; 3.686 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 3.774 ; 3.774 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 3.794 ; 3.794 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 3.662 ; 3.662 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 3.685 ; 3.685 ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 3.804 ; 3.804 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 3.938 ; 3.938 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 3.827 ; 3.827 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 3.826 ; 3.826 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 3.818 ; 3.818 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 3.804 ; 3.804 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 3.876 ; 3.876 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 3.911 ; 3.911 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 3.944 ; 3.944 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.369 ; 4.369 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.231 ; 4.231 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 3.944 ; 3.944 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.100 ; 4.100 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.212 ; 4.212 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.090 ; 4.090 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.090 ; 4.090 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.212 ; 4.212 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.221 ; 4.221 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.037 ; 4.037 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 2.087 ;       ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 2.087 ;       ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 3.786 ; 3.786 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 3.791 ; 3.791 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 3.786 ; 3.786 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 3.881 ; 3.881 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 3.830 ; 3.830 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 4.033 ; 4.033 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 3.799 ; 3.799 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 3.948 ; 3.948 ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 3.646 ; 3.646 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 3.842 ; 3.842 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 4.149 ; 4.149 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 4.162 ; 4.162 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 3.818 ; 3.818 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 3.646 ; 3.646 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 3.867 ; 3.867 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 4.044 ; 4.044 ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;       ; 2.087 ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;       ; 2.087 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                    ;
+--------------------------+---------+--------+----------+---------+---------------------+
; Clock                    ; Setup   ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+--------------------------+---------+--------+----------+---------+---------------------+
; Worst-case Slack         ; -1.997  ; -3.109 ; N/A      ; N/A     ; -1.631              ;
;  CLOCK_50                ; -1.461  ; -3.109 ; N/A      ; N/A     ; -1.631              ;
;  Controller:fsm|state[0] ; -1.997  ; -2.746 ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS          ; -45.839 ; -9.504 ; 0.0      ; 0.0     ; -5.297              ;
;  CLOCK_50                ; -3.600  ; -6.758 ; N/A      ; N/A     ; -5.297              ;
;  Controller:fsm|state[0] ; -42.239 ; -2.746 ; N/A      ; N/A     ; 0.000               ;
+--------------------------+---------+--------+----------+---------+---------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 6.534 ; 6.534 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 5.897 ; 5.897 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 6.247 ; 6.247 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 6.534 ; 6.534 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 3.457 ; 3.457 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 3.457 ; 3.457 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 3.397 ; 3.397 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 3.262 ; 3.262 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 3.019 ; 3.019 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 3.326 ; 3.326 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 3.298 ; 3.298 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 2.970 ; 2.970 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 2.712 ; 2.712 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 3.412 ; 3.412 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 3.412 ; 3.412 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 3.352 ; 3.352 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 3.202 ; 3.202 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 2.959 ; 2.959 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 2.945 ; 2.945 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.917 ; 2.917 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 2.589 ; 2.589 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 2.331 ; 2.331 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -2.713 ; -2.713 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -2.713 ; -2.713 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -2.755 ; -2.755 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -3.060 ; -3.060 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.417  ; 0.417  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.260 ; -0.260 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.045 ; -0.045 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.204 ; -0.204 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.139  ; 0.139  ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.011 ; -0.011 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.122  ; 0.122  ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.041 ; -0.041 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.417  ; 0.417  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.403  ; 0.403  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.243 ; -0.243 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.037 ; -0.037 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.196 ; -0.196 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.149  ; 0.149  ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.013  ; 0.013  ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.121  ; 0.121  ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.042 ; -0.042 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.403  ; 0.403  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 8.584  ; 8.584  ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 8.584  ; 8.584  ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 7.271  ; 7.271  ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 7.633  ; 7.633  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 7.568  ; 7.568  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 7.625  ; 7.625  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 7.367  ; 7.367  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 7.606  ; 7.606  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 7.633  ; 7.633  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 7.284  ; 7.284  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 7.362  ; 7.362  ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 8.004  ; 8.004  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 8.004  ; 8.004  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 7.737  ; 7.737  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 7.734  ; 7.734  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 7.717  ; 7.717  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 7.644  ; 7.644  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 7.786  ; 7.786  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 7.909  ; 7.909  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 10.391 ; 10.391 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.391 ; 10.391 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.045 ; 10.045 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 9.321  ; 9.321  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 9.691  ; 9.691  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 9.864  ; 9.864  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 9.681  ; 9.681  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 9.681  ; 9.681  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 9.864  ; 9.864  ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.035 ; 10.035 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 9.623  ; 9.623  ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 4.351  ;        ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 4.351  ;        ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 8.233  ; 8.233  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 7.620  ; 7.620  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 7.613  ; 7.613  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 7.784  ; 7.784  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 7.659  ; 7.659  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 8.233  ; 8.233  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 7.628  ; 7.628  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 8.024  ; 8.024  ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 8.405  ; 8.405  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 7.732  ; 7.732  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 8.389  ; 8.389  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 8.405  ; 8.405  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 7.702  ; 7.702  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 7.261  ; 7.261  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 7.771  ; 7.771  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 8.248  ; 8.248  ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;        ; 4.351  ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;        ; 4.351  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 3.485 ; 3.485 ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 4.059 ; 4.059 ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 3.485 ; 3.485 ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 3.662 ; 3.662 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 3.746 ; 3.746 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 3.787 ; 3.787 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 3.686 ; 3.686 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 3.774 ; 3.774 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 3.794 ; 3.794 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 3.662 ; 3.662 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 3.685 ; 3.685 ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 3.804 ; 3.804 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 3.938 ; 3.938 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 3.827 ; 3.827 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 3.826 ; 3.826 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 3.818 ; 3.818 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 3.804 ; 3.804 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 3.876 ; 3.876 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 3.911 ; 3.911 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 3.944 ; 3.944 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.369 ; 4.369 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.231 ; 4.231 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 3.944 ; 3.944 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.100 ; 4.100 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.212 ; 4.212 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.090 ; 4.090 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.090 ; 4.090 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.212 ; 4.212 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.221 ; 4.221 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.037 ; 4.037 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 2.087 ;       ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 2.087 ;       ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 3.786 ; 3.786 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 3.791 ; 3.791 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 3.786 ; 3.786 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 3.881 ; 3.881 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 3.830 ; 3.830 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 4.033 ; 4.033 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 3.799 ; 3.799 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 3.948 ; 3.948 ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 3.646 ; 3.646 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 3.842 ; 3.842 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 4.149 ; 4.149 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 4.162 ; 4.162 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 3.818 ; 3.818 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 3.646 ; 3.646 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 3.867 ; 3.867 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 4.044 ; 4.044 ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;       ; 2.087 ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;       ; 2.087 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------+
; Setup Transfers                                                                               ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; CLOCK_50                ; CLOCK_50                ; 13       ; 0        ; 0        ; 0        ;
; Controller:fsm|state[0] ; CLOCK_50                ; 6        ; 6        ; 0        ; 0        ;
; CLOCK_50                ; Controller:fsm|state[0] ; 14       ; 0        ; 14       ; 0        ;
; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1        ; 1        ; 0        ; 0        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; CLOCK_50                ; CLOCK_50                ; 13       ; 0        ; 0        ; 0        ;
; Controller:fsm|state[0] ; CLOCK_50                ; 6        ; 6        ; 0        ; 0        ;
; CLOCK_50                ; Controller:fsm|state[0] ; 14       ; 0        ; 14       ; 0        ;
; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1        ; 1        ; 0        ; 0        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 11    ; 11   ;
; Unconstrained Input Port Paths  ; 120   ; 120  ;
; Unconstrained Output Ports      ; 41    ; 41   ;
; Unconstrained Output Port Paths ; 41    ; 41   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Wed Sep 30 20:59:11 2015
Info: Command: quartus_sta EggTimer -c EggTimer
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 29 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'EggTimer.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
    Info (332105): create_clock -period 1.000 -name Controller:fsm|state[0] Controller:fsm|state[0]
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux7~0  from: dataa  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.997
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.997       -42.239 Controller:fsm|state[0] 
    Info (332119):    -1.461        -3.600 CLOCK_50 
Info (332146): Worst-case hold slack is -3.109
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.109        -6.758 CLOCK_50 
    Info (332119):    -2.746        -2.746 Controller:fsm|state[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631        -5.297 CLOCK_50 
    Info (332119):     0.500         0.000 Controller:fsm|state[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux7~0  from: dataa  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.215        -1.534 Controller:fsm|state[0] 
    Info (332119):     0.069         0.000 CLOCK_50 
Info (332146): Worst-case hold slack is -1.496
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.496        -3.630 CLOCK_50 
    Info (332119):    -0.970        -0.970 Controller:fsm|state[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380        -4.380 CLOCK_50 
    Info (332119):     0.500         0.000 Controller:fsm|state[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 422 megabytes
    Info: Processing ended: Wed Sep 30 20:59:12 2015
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


