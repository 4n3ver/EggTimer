TimeQuest Timing Analyzer report for EggTimer
Wed Sep 30 16:46:23 2015
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'Controller:fsm|state[0]'
 12. Slow Model Setup: 'CLOCK_50'
 13. Slow Model Hold: 'CLOCK_50'
 14. Slow Model Hold: 'Controller:fsm|state[0]'
 15. Slow Model Minimum Pulse Width: 'CLOCK_50'
 16. Slow Model Minimum Pulse Width: 'Controller:fsm|state[0]'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'Controller:fsm|state[0]'
 27. Fast Model Setup: 'CLOCK_50'
 28. Fast Model Hold: 'CLOCK_50'
 29. Fast Model Hold: 'Controller:fsm|state[0]'
 30. Fast Model Minimum Pulse Width: 'CLOCK_50'
 31. Fast Model Minimum Pulse Width: 'Controller:fsm|state[0]'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; EggTimer                                                          ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                           ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; Clock Name              ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                     ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; CLOCK_50                ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 }                ;
; Controller:fsm|state[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { Controller:fsm|state[0] } ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                                                ;
+------------+-----------------+-------------------------+---------------------------------------------------------------+
; Fmax       ; Restricted Fmax ; Clock Name              ; Note                                                          ;
+------------+-----------------+-------------------------+---------------------------------------------------------------+
; INF MHz    ; 189.54 MHz      ; Controller:fsm|state[0] ; limit due to hold check                                       ;
; 421.76 MHz ; 380.08 MHz      ; CLOCK_50                ; limit due to minimum period restriction (max I/O toggle rate) ;
+------------+-----------------+-------------------------+---------------------------------------------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------------------------+
; Slow Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -1.588 ; -29.789       ;
; CLOCK_50                ; -1.371 ; -3.091        ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -2.772 ; -5.799        ;
; Controller:fsm|state[0] ; -2.638 ; -2.638        ;
+-------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Slow Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.631 ; -5.297        ;
; Controller:fsm|state[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'Controller:fsm|state[0]'                                                                                                   ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -1.588 ; Controller:fsm|state[2] ; HEX3[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.937      ; 1.845      ;
; -1.528 ; Controller:fsm|state[2] ; HEX3[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.935      ; 1.823      ;
; -1.526 ; Controller:fsm|state[2] ; HEX2[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.940      ; 1.779      ;
; -1.514 ; Controller:fsm|state[2] ; HEX2[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.791      ; 1.754      ;
; -1.485 ; Controller:fsm|state[2] ; HEX3[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.778      ; 1.754      ;
; -1.473 ; Controller:fsm|state[2] ; HEX2[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.956      ; 1.744      ;
; -1.472 ; Controller:fsm|state[2] ; HEX2[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.791      ; 1.754      ;
; -1.435 ; Controller:fsm|state[2] ; HEX3[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.952      ; 1.746      ;
; -1.399 ; Controller:fsm|state[2] ; HEX2[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.956      ; 1.701      ;
; -1.356 ; Controller:fsm|state[2] ; HEX3[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.941      ; 1.602      ;
; -1.311 ; Controller:fsm|state[2] ; HEX2[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.938      ; 1.603      ;
; -1.246 ; Controller:fsm|state[2] ; HEX3[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.773      ; 1.511      ;
; -1.228 ; Controller:fsm|state[2] ; HEX3[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.773      ; 1.497      ;
; -1.084 ; Controller:fsm|state[2] ; HEX2[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.917      ; 1.695      ;
; -0.879 ; Controller:fsm|state[2] ; HEX0[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.044      ; 1.779      ;
; -0.871 ; Controller:fsm|state[2] ; HEX1[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.942      ; 1.762      ;
; -0.851 ; Controller:fsm|state[2] ; HEX1[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.083      ; 1.744      ;
; -0.818 ; Controller:fsm|state[2] ; HEX1[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.944      ; 1.757      ;
; -0.816 ; Controller:fsm|state[2] ; HEX0[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.946      ; 1.754      ;
; -0.814 ; Controller:fsm|state[2] ; HEX0[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.945      ; 1.754      ;
; -0.802 ; Controller:fsm|state[2] ; HEX0[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.084      ; 1.742      ;
; -0.761 ; Controller:fsm|state[2] ; HEX0[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.085      ; 1.698      ;
; -0.677 ; Controller:fsm|state[2] ; HEX1[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.073      ; 1.598      ;
; -0.664 ; Controller:fsm|state[2] ; HEX0[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.073      ; 1.597      ;
; -0.654 ; Controller:fsm|state[2] ; HEX1[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.913      ; 1.509      ;
; -0.652 ; Controller:fsm|state[2] ; HEX1[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.911      ; 1.497      ;
; -0.443 ; Controller:fsm|state[2] ; HEX0[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.056      ; 1.351      ;
; -0.442 ; Controller:fsm|state[2] ; HEX1[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.054      ; 1.343      ;
; 1.963  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 3.561      ; 1.200      ;
; 2.463  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 3.561      ; 1.200      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                 ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; -1.371 ; Controller:fsm|state[1] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 2.409      ;
; -1.246 ; Controller:fsm|state[2] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 2.284      ;
; -1.199 ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.006     ; 2.231      ;
; -1.152 ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.006     ; 2.184      ;
; -0.521 ; Controller:fsm|state[1] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 1.559      ;
; -0.403 ; Controller:fsm|state[2] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 1.441      ;
; 1.421  ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.946      ; 2.340      ;
; 1.593  ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.940      ; 2.162      ;
; 1.774  ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.946      ; 1.987      ;
; 1.921  ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.946      ; 2.340      ;
; 2.093  ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.940      ; 2.162      ;
; 2.274  ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.946      ; 1.987      ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                 ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                 ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; -2.772 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.940      ; 0.731      ;
; -2.272 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.940      ; 0.731      ;
; -1.522 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.946      ; 1.987      ;
; -1.505 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.946      ; 2.004      ;
; -1.022 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.946      ; 1.987      ;
; -1.005 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.946      ; 2.004      ;
; 0.445  ; Controller:fsm|state[1] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 1.155  ; Controller:fsm|state[2] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 1.441      ;
; 1.273  ; Controller:fsm|state[1] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 1.559      ;
; 1.457  ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.006     ; 1.737      ;
; 1.790  ; Controller:fsm|state[2] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 2.076      ;
; 1.826  ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.006     ; 2.106      ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'Controller:fsm|state[0]'                                                                                                    ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -2.638 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 3.561      ; 1.200      ;
; -2.138 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 3.561      ; 1.200      ;
; 0.289  ; Controller:fsm|state[2] ; HEX1[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.054      ; 1.343      ;
; 0.295  ; Controller:fsm|state[2] ; HEX0[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.056      ; 1.351      ;
; 0.524  ; Controller:fsm|state[2] ; HEX0[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.073      ; 1.597      ;
; 0.525  ; Controller:fsm|state[2] ; HEX1[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.073      ; 1.598      ;
; 0.586  ; Controller:fsm|state[2] ; HEX1[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.911      ; 1.497      ;
; 0.596  ; Controller:fsm|state[2] ; HEX1[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.913      ; 1.509      ;
; 0.613  ; Controller:fsm|state[2] ; HEX0[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.085      ; 1.698      ;
; 0.658  ; Controller:fsm|state[2] ; HEX0[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.084      ; 1.742      ;
; 0.661  ; Controller:fsm|state[2] ; HEX1[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.083      ; 1.744      ;
; 0.735  ; Controller:fsm|state[2] ; HEX0[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.044      ; 1.779      ;
; 0.808  ; Controller:fsm|state[2] ; HEX0[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.946      ; 1.754      ;
; 0.809  ; Controller:fsm|state[2] ; HEX0[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.945      ; 1.754      ;
; 0.813  ; Controller:fsm|state[2] ; HEX1[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.944      ; 1.757      ;
; 0.820  ; Controller:fsm|state[2] ; HEX1[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.942      ; 1.762      ;
; 1.161  ; Controller:fsm|state[2] ; HEX3[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.941      ; 1.602      ;
; 1.165  ; Controller:fsm|state[2] ; HEX2[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.938      ; 1.603      ;
; 1.224  ; Controller:fsm|state[2] ; HEX3[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.773      ; 1.497      ;
; 1.238  ; Controller:fsm|state[2] ; HEX3[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.773      ; 1.511      ;
; 1.245  ; Controller:fsm|state[2] ; HEX2[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.956      ; 1.701      ;
; 1.278  ; Controller:fsm|state[2] ; HEX2[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.917      ; 1.695      ;
; 1.288  ; Controller:fsm|state[2] ; HEX2[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.956      ; 1.744      ;
; 1.294  ; Controller:fsm|state[2] ; HEX3[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.952      ; 1.746      ;
; 1.339  ; Controller:fsm|state[2] ; HEX2[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.940      ; 1.779      ;
; 1.388  ; Controller:fsm|state[2] ; HEX3[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.935      ; 1.823      ;
; 1.408  ; Controller:fsm|state[2] ; HEX3[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.937      ; 1.845      ;
; 1.463  ; Controller:fsm|state[2] ; HEX2[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.791      ; 1.754      ;
; 1.463  ; Controller:fsm|state[2] ; HEX2[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.791      ; 1.754      ;
; 1.476  ; Controller:fsm|state[2] ; HEX3[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.778      ; 1.754      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                  ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                  ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[2] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[2]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[2]|clk        ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'Controller:fsm|state[0]'                                                             ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target              ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[3]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[3]$latch|datad ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 6.947 ; 6.947 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 6.385 ; 6.385 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 6.564 ; 6.564 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 6.947 ; 6.947 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 2.962 ; 2.962 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 2.892 ; 2.892 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 2.378 ; 2.378 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 2.217 ; 2.217 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 2.927 ; 2.927 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 2.962 ; 2.962 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.782 ; 2.782 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 2.601 ; 2.601 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 2.114 ; 2.114 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 3.127 ; 3.127 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 3.092 ; 3.092 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 2.578 ; 2.578 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 2.417 ; 2.417 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 3.127 ; 3.127 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 3.087 ; 3.087 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.903 ; 2.903 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 2.725 ; 2.725 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 2.273 ; 2.273 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -5.330 ; -5.330 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -5.330 ; -5.330 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -5.468 ; -5.468 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -6.527 ; -6.527 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.541  ; 0.541  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.346 ; -0.346 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.854 ; -0.854 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.672 ; -0.672 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.573 ; -0.573 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.575 ; -0.575 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -1.081 ; -1.081 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.880 ; -0.880 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.541  ; 0.541  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.466  ; 0.466  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.450 ; -0.450 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.995 ; -0.995 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.776 ; -0.776 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.677 ; -0.677 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.650 ; -0.650 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -1.214 ; -1.214 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -1.013 ; -1.013 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.466  ; 0.466  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 7.637  ; 7.637  ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 7.540  ; 7.540  ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 7.637  ; 7.637  ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 7.962  ; 7.962  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 7.483  ; 7.483  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 7.621  ; 7.621  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 7.962  ; 7.962  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 7.637  ; 7.637  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 7.757  ; 7.757  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 7.868  ; 7.868  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 7.768  ; 7.768  ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 8.015  ; 8.015  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 7.872  ; 7.872  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 7.987  ; 7.987  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 7.889  ; 7.889  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 7.986  ; 7.986  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 7.847  ; 7.847  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 8.015  ; 8.015  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 7.855  ; 7.855  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 11.738 ; 11.738 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 11.721 ; 11.721 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 11.738 ; 11.738 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 11.382 ; 11.382 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 11.030 ; 11.030 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 11.479 ; 11.479 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 11.020 ; 11.020 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 11.020 ; 11.020 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 11.479 ; 11.479 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 11.728 ; 11.728 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 11.321 ; 11.321 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 4.060  ;        ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 4.060  ;        ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 8.241  ; 8.241  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 7.720  ; 7.720  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 8.154  ; 8.154  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 8.228  ; 8.228  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 8.241  ; 8.241  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 8.236  ; 8.236  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 8.052  ; 8.052  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 7.998  ; 7.998  ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 8.436  ; 8.436  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 8.220  ; 8.220  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 8.394  ; 8.394  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 8.436  ; 8.436  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 7.082  ; 7.082  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 7.639  ; 7.639  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 7.882  ; 7.882  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 8.044  ; 8.044  ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;        ; 4.060  ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;        ; 4.060  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 7.540  ; 7.540  ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 7.540  ; 7.540  ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 7.637  ; 7.637  ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 7.483  ; 7.483  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 7.483  ; 7.483  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 7.621  ; 7.621  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 7.962  ; 7.962  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 7.637  ; 7.637  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 7.757  ; 7.757  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 7.868  ; 7.868  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 7.768  ; 7.768  ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 7.847  ; 7.847  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 7.872  ; 7.872  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 7.987  ; 7.987  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 7.889  ; 7.889  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 7.986  ; 7.986  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 7.847  ; 7.847  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 8.015  ; 8.015  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 7.855  ; 7.855  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 11.020 ; 11.020 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 11.721 ; 11.721 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 11.738 ; 11.738 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 11.382 ; 11.382 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 11.030 ; 11.030 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 11.479 ; 11.479 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 11.020 ; 11.020 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 11.020 ; 11.020 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 11.479 ; 11.479 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 11.728 ; 11.728 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 11.321 ; 11.321 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 4.060  ;        ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 4.060  ;        ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 7.720  ; 7.720  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 7.720  ; 7.720  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 8.154  ; 8.154  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 8.228  ; 8.228  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 8.241  ; 8.241  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 8.236  ; 8.236  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 8.052  ; 8.052  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 7.998  ; 7.998  ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 7.082  ; 7.082  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 8.220  ; 8.220  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 8.394  ; 8.394  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 8.436  ; 8.436  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 7.082  ; 7.082  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 7.639  ; 7.639  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 7.882  ; 7.882  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 8.044  ; 8.044  ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;        ; 4.060  ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;        ; 4.060  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------+
; Fast Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -0.035 ; -0.100        ;
; CLOCK_50                ; 0.104  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.364 ; -3.267        ;
; Controller:fsm|state[0] ; -0.964 ; -1.130        ;
+-------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Fast Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.380 ; -4.380        ;
; Controller:fsm|state[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'Controller:fsm|state[0]'                                                                                                   ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -0.035 ; Controller:fsm|state[2] ; HEX3[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.593      ; 0.728      ;
; -0.023 ; Controller:fsm|state[2] ; HEX2[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.593      ; 0.709      ;
; -0.016 ; Controller:fsm|state[2] ; HEX3[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.590      ; 0.714      ;
; -0.015 ; Controller:fsm|state[2] ; HEX2[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.542      ; 0.700      ;
; -0.011 ; Controller:fsm|state[2] ; HEX3[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.534      ; 0.699      ;
; 0.002  ; Controller:fsm|state[2] ; HEX2[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.542      ; 0.694      ;
; 0.007  ; Controller:fsm|state[2] ; HEX2[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.604      ; 0.694      ;
; 0.012  ; Controller:fsm|state[2] ; HEX2[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.604      ; 0.696      ;
; 0.016  ; Controller:fsm|state[2] ; HEX3[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.601      ; 0.696      ;
; 0.040  ; Controller:fsm|state[2] ; HEX3[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.593      ; 0.641      ;
; 0.058  ; Controller:fsm|state[2] ; HEX2[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.593      ; 0.643      ;
; 0.072  ; Controller:fsm|state[2] ; HEX3[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.531      ; 0.613      ;
; 0.087  ; Controller:fsm|state[2] ; HEX3[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.531      ; 0.602      ;
; 0.135  ; Controller:fsm|state[2] ; HEX2[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.578      ; 0.667      ;
; 0.518  ; Controller:fsm|state[2] ; HEX0[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.624      ; 0.709      ;
; 0.536  ; Controller:fsm|state[2] ; HEX1[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.598      ; 0.698      ;
; 0.548  ; Controller:fsm|state[2] ; HEX1[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.644      ; 0.694      ;
; 0.557  ; Controller:fsm|state[2] ; HEX0[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.600      ; 0.694      ;
; 0.557  ; Controller:fsm|state[2] ; HEX0[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.601      ; 0.694      ;
; 0.560  ; Controller:fsm|state[2] ; HEX1[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.599      ; 0.690      ;
; 0.561  ; Controller:fsm|state[2] ; HEX0[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.645      ; 0.693      ;
; 0.563  ; Controller:fsm|state[2] ; HEX0[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.644      ; 0.692      ;
; 0.603  ; Controller:fsm|state[2] ; HEX1[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.641      ; 0.637      ;
; 0.608  ; Controller:fsm|state[2] ; HEX1[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.580      ; 0.605      ;
; 0.610  ; Controller:fsm|state[2] ; HEX1[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.578      ; 0.596      ;
; 0.616  ; Controller:fsm|state[2] ; HEX0[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.639      ; 0.637      ;
; 0.686  ; Controller:fsm|state[2] ; HEX0[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.628      ; 0.552      ;
; 0.690  ; Controller:fsm|state[2] ; HEX1[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.626      ; 0.542      ;
; 1.067  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 1.314      ; 0.491      ;
; 1.567  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 1.314      ; 0.491      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                               ;
+-------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack ; From Node               ; To Node                 ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; 0.104 ; Controller:fsm|state[1] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.928      ;
; 0.148 ; Controller:fsm|state[2] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.884      ;
; 0.151 ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.003     ; 0.878      ;
; 0.177 ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.003     ; 0.852      ;
; 0.409 ; Controller:fsm|state[1] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.623      ;
; 0.442 ; Controller:fsm|state[2] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.590      ;
; 1.216 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.441      ; 0.898      ;
; 1.263 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.438      ; 0.848      ;
; 1.335 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.441      ; 0.779      ;
; 1.716 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.441      ; 0.898      ;
; 1.763 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.438      ; 0.848      ;
; 1.835 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.441      ; 0.779      ;
+-------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                 ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                 ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+
; -1.364 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.438      ; 0.367      ;
; -0.955 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.441      ; 0.779      ;
; -0.948 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.441      ; 0.786      ;
; -0.864 ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.438      ; 0.367      ;
; -0.455 ; Controller:fsm|state[0] ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.441      ; 0.779      ;
; -0.448 ; Controller:fsm|state[0] ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.441      ; 0.786      ;
; 0.215  ; Controller:fsm|state[1] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.438  ; Controller:fsm|state[2] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.590      ;
; 0.471  ; Controller:fsm|state[1] ; Controller:fsm|state[2] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.623      ;
; 0.548  ; Controller:fsm|state[1] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.003     ; 0.697      ;
; 0.667  ; Controller:fsm|state[2] ; Controller:fsm|state[1] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.819      ;
; 0.685  ; Controller:fsm|state[2] ; Controller:fsm|state[0] ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.003     ; 0.834      ;
+--------+-------------------------+-------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'Controller:fsm|state[0]'                                                                                                    ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -0.964 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 1.314      ; 0.491      ;
; -0.464 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 1.314      ; 0.491      ;
; -0.084 ; Controller:fsm|state[2] ; HEX1[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.626      ; 0.542      ;
; -0.076 ; Controller:fsm|state[2] ; HEX0[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.628      ; 0.552      ;
; -0.004 ; Controller:fsm|state[2] ; HEX1[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.641      ; 0.637      ;
; -0.002 ; Controller:fsm|state[2] ; HEX0[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.639      ; 0.637      ;
; 0.018  ; Controller:fsm|state[2] ; HEX1[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.578      ; 0.596      ;
; 0.025  ; Controller:fsm|state[2] ; HEX1[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.580      ; 0.605      ;
; 0.048  ; Controller:fsm|state[2] ; HEX0[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.644      ; 0.692      ;
; 0.048  ; Controller:fsm|state[2] ; HEX0[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.645      ; 0.693      ;
; 0.050  ; Controller:fsm|state[2] ; HEX1[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.644      ; 0.694      ;
; 0.085  ; Controller:fsm|state[2] ; HEX0[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.624      ; 0.709      ;
; 0.091  ; Controller:fsm|state[2] ; HEX1[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.599      ; 0.690      ;
; 0.093  ; Controller:fsm|state[2] ; HEX0[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.601      ; 0.694      ;
; 0.094  ; Controller:fsm|state[2] ; HEX0[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.600      ; 0.694      ;
; 0.100  ; Controller:fsm|state[2] ; HEX1[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.598      ; 0.698      ;
; 0.548  ; Controller:fsm|state[2] ; HEX3[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.593      ; 0.641      ;
; 0.550  ; Controller:fsm|state[2] ; HEX2[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.593      ; 0.643      ;
; 0.571  ; Controller:fsm|state[2] ; HEX3[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.531      ; 0.602      ;
; 0.582  ; Controller:fsm|state[2] ; HEX3[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.531      ; 0.613      ;
; 0.589  ; Controller:fsm|state[2] ; HEX2[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.578      ; 0.667      ;
; 0.590  ; Controller:fsm|state[2] ; HEX2[4]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.604      ; 0.694      ;
; 0.592  ; Controller:fsm|state[2] ; HEX2[6]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.604      ; 0.696      ;
; 0.595  ; Controller:fsm|state[2] ; HEX3[1]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.601      ; 0.696      ;
; 0.616  ; Controller:fsm|state[2] ; HEX2[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.593      ; 0.709      ;
; 0.624  ; Controller:fsm|state[2] ; HEX3[2]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.590      ; 0.714      ;
; 0.635  ; Controller:fsm|state[2] ; HEX3[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.593      ; 0.728      ;
; 0.652  ; Controller:fsm|state[2] ; HEX2[5]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.542      ; 0.694      ;
; 0.658  ; Controller:fsm|state[2] ; HEX2[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.542      ; 0.700      ;
; 0.665  ; Controller:fsm|state[2] ; HEX3[3]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.534      ; 0.699      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                  ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                  ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[2] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[2]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[2]|clk        ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'Controller:fsm|state[0]'                                                             ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target              ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX0[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[2]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[4]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[5]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX1[6]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[0]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[3]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[4]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[4]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[5]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[5]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX2[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX2[6]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX2[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX2[6]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[0]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[0]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[1]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[1]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[2]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[2]$latch|datac ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; HEX3[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; HEX3[3]$latch       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; HEX3[3]$latch|datad ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; HEX3[3]$latch|datad ;
+-------+--------------+----------------+------------------+-------------------------+------------+---------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 3.409 ; 3.409 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 3.223 ; 3.223 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 3.260 ; 3.260 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 3.409 ; 3.409 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.819 ; 0.819 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.703 ; 0.703 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.530 ; 0.530 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.473 ; 0.473 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.819 ; 0.819 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.770 ; 0.770 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.715 ; 0.715 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.622 ; 0.622 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.392 ; 0.392 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.891 ; 0.891 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.769 ; 0.769 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.595 ; 0.595 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.545 ; 0.545 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.891 ; 0.891 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.847 ; 0.847 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.787 ; 0.787 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.698 ; 0.698 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.461 ; 0.461 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -2.787 ; -2.787 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -2.787 ; -2.787 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -2.835 ; -2.835 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -3.242 ; -3.242 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.573  ; 0.573  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.178  ; 0.178  ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.024 ; -0.024 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.058  ; 0.058  ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.006 ; -0.006 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.083  ; 0.083  ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.118 ; -0.118 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.025 ; -0.025 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.573  ; 0.573  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.540  ; 0.540  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.147  ; 0.147  ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.076 ; -0.076 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.027  ; 0.027  ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.037 ; -0.037 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.050  ; 0.050  ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.163 ; -0.163 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.070 ; -0.070 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.540  ; 0.540  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                      ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 3.654 ; 3.654 ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 3.654 ; 3.654 ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 3.637 ; 3.637 ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 3.913 ; 3.913 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 3.728 ; 3.728 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 3.781 ; 3.781 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 3.913 ; 3.913 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 3.794 ; 3.794 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 3.857 ; 3.857 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 3.903 ; 3.903 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 3.865 ; 3.865 ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 3.963 ; 3.963 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 3.910 ; 3.910 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 3.927 ; 3.927 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 3.904 ; 3.904 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 3.928 ; 3.928 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 3.889 ; 3.889 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 3.963 ; 3.963 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 3.901 ; 3.901 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.908 ; 4.908 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.905 ; 4.905 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.908 ; 4.908 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.764 ; 4.764 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.628 ; 4.628 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.834 ; 4.834 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.618 ; 4.618 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.618 ; 4.618 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.834 ; 4.834 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.898 ; 4.898 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.717 ; 4.717 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 1.951 ;       ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 1.951 ;       ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 4.056 ; 4.056 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 3.836 ; 3.836 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 3.986 ; 3.986 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 4.049 ; 4.049 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 4.056 ; 4.056 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 4.052 ; 4.052 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 3.972 ; 3.972 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 3.972 ; 3.972 ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 4.190 ; 4.190 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 4.032 ; 4.032 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 4.168 ; 4.168 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 4.190 ; 4.190 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 3.591 ; 3.591 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 3.783 ; 3.783 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 3.904 ; 3.904 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 3.974 ; 3.974 ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;       ; 1.951 ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;       ; 1.951 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 3.637 ; 3.637 ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 3.654 ; 3.654 ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 3.637 ; 3.637 ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 3.728 ; 3.728 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 3.728 ; 3.728 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 3.781 ; 3.781 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 3.913 ; 3.913 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 3.794 ; 3.794 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 3.857 ; 3.857 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 3.903 ; 3.903 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 3.865 ; 3.865 ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 3.889 ; 3.889 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 3.910 ; 3.910 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 3.927 ; 3.927 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 3.904 ; 3.904 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 3.928 ; 3.928 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 3.889 ; 3.889 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 3.963 ; 3.963 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 3.901 ; 3.901 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.618 ; 4.618 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.905 ; 4.905 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.908 ; 4.908 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.764 ; 4.764 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.628 ; 4.628 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.834 ; 4.834 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.618 ; 4.618 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.618 ; 4.618 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.834 ; 4.834 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.898 ; 4.898 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.717 ; 4.717 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 1.951 ;       ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 1.951 ;       ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 3.836 ; 3.836 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 3.836 ; 3.836 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 3.986 ; 3.986 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 4.049 ; 4.049 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 4.056 ; 4.056 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 4.052 ; 4.052 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 3.972 ; 3.972 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 3.972 ; 3.972 ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 3.591 ; 3.591 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 4.032 ; 4.032 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 4.168 ; 4.168 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 4.190 ; 4.190 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 3.591 ; 3.591 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 3.783 ; 3.783 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 3.904 ; 3.904 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 3.974 ; 3.974 ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;       ; 1.951 ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;       ; 1.951 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                    ;
+--------------------------+---------+--------+----------+---------+---------------------+
; Clock                    ; Setup   ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+--------------------------+---------+--------+----------+---------+---------------------+
; Worst-case Slack         ; -1.588  ; -2.772 ; N/A      ; N/A     ; -1.631              ;
;  CLOCK_50                ; -1.371  ; -2.772 ; N/A      ; N/A     ; -1.631              ;
;  Controller:fsm|state[0] ; -1.588  ; -2.638 ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS          ; -32.88  ; -8.437 ; 0.0      ; 0.0     ; -5.297              ;
;  CLOCK_50                ; -3.091  ; -5.799 ; N/A      ; N/A     ; -5.297              ;
;  Controller:fsm|state[0] ; -29.789 ; -2.638 ; N/A      ; N/A     ; 0.000               ;
+--------------------------+---------+--------+----------+---------+---------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 6.947 ; 6.947 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 6.385 ; 6.385 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 6.564 ; 6.564 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 6.947 ; 6.947 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 2.962 ; 2.962 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 2.892 ; 2.892 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 2.378 ; 2.378 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 2.217 ; 2.217 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 2.927 ; 2.927 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 2.962 ; 2.962 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.782 ; 2.782 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 2.601 ; 2.601 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 2.114 ; 2.114 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 3.127 ; 3.127 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 3.092 ; 3.092 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 2.578 ; 2.578 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 2.417 ; 2.417 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 3.127 ; 3.127 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 3.087 ; 3.087 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.903 ; 2.903 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 2.725 ; 2.725 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 2.273 ; 2.273 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -2.787 ; -2.787 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -2.787 ; -2.787 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -2.835 ; -2.835 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -3.242 ; -3.242 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.573  ; 0.573  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.178  ; 0.178  ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.024 ; -0.024 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.058  ; 0.058  ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.006 ; -0.006 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.083  ; 0.083  ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.118 ; -0.118 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.025 ; -0.025 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.573  ; 0.573  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.540  ; 0.540  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.147  ; 0.147  ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.076 ; -0.076 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.027  ; 0.027  ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.037 ; -0.037 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.050  ; 0.050  ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.163 ; -0.163 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.070 ; -0.070 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.540  ; 0.540  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 7.637  ; 7.637  ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 7.540  ; 7.540  ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 7.637  ; 7.637  ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 7.962  ; 7.962  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 7.483  ; 7.483  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 7.621  ; 7.621  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 7.962  ; 7.962  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 7.637  ; 7.637  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 7.757  ; 7.757  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 7.868  ; 7.868  ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 7.768  ; 7.768  ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 8.015  ; 8.015  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 7.872  ; 7.872  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 7.987  ; 7.987  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 7.889  ; 7.889  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 7.986  ; 7.986  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 7.847  ; 7.847  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 8.015  ; 8.015  ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 7.855  ; 7.855  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 11.738 ; 11.738 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 11.721 ; 11.721 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 11.738 ; 11.738 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 11.382 ; 11.382 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 11.030 ; 11.030 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 11.479 ; 11.479 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 11.020 ; 11.020 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 11.020 ; 11.020 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 11.479 ; 11.479 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 11.728 ; 11.728 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 11.321 ; 11.321 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 4.060  ;        ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 4.060  ;        ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 8.241  ; 8.241  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 7.720  ; 7.720  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 8.154  ; 8.154  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 8.228  ; 8.228  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 8.241  ; 8.241  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 8.236  ; 8.236  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 8.052  ; 8.052  ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 7.998  ; 7.998  ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 8.436  ; 8.436  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 8.220  ; 8.220  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 8.394  ; 8.394  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 8.436  ; 8.436  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 7.082  ; 7.082  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 7.639  ; 7.639  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 7.882  ; 7.882  ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 8.044  ; 8.044  ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;        ; 4.060  ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;        ; 4.060  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; state[*]  ; CLOCK_50                ; 3.637 ; 3.637 ; Rise       ; CLOCK_50                ;
;  state[1] ; CLOCK_50                ; 3.654 ; 3.654 ; Rise       ; CLOCK_50                ;
;  state[2] ; CLOCK_50                ; 3.637 ; 3.637 ; Rise       ; CLOCK_50                ;
; HEX0[*]   ; Controller:fsm|state[0] ; 3.728 ; 3.728 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[0]  ; Controller:fsm|state[0] ; 3.728 ; 3.728 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[1]  ; Controller:fsm|state[0] ; 3.781 ; 3.781 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[2]  ; Controller:fsm|state[0] ; 3.913 ; 3.913 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[3]  ; Controller:fsm|state[0] ; 3.794 ; 3.794 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[4]  ; Controller:fsm|state[0] ; 3.857 ; 3.857 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[5]  ; Controller:fsm|state[0] ; 3.903 ; 3.903 ; Rise       ; Controller:fsm|state[0] ;
;  HEX0[6]  ; Controller:fsm|state[0] ; 3.865 ; 3.865 ; Rise       ; Controller:fsm|state[0] ;
; HEX1[*]   ; Controller:fsm|state[0] ; 3.889 ; 3.889 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[0]  ; Controller:fsm|state[0] ; 3.910 ; 3.910 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[1]  ; Controller:fsm|state[0] ; 3.927 ; 3.927 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[2]  ; Controller:fsm|state[0] ; 3.904 ; 3.904 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[3]  ; Controller:fsm|state[0] ; 3.928 ; 3.928 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[4]  ; Controller:fsm|state[0] ; 3.889 ; 3.889 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[5]  ; Controller:fsm|state[0] ; 3.963 ; 3.963 ; Rise       ; Controller:fsm|state[0] ;
;  HEX1[6]  ; Controller:fsm|state[0] ; 3.901 ; 3.901 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.618 ; 4.618 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.905 ; 4.905 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.908 ; 4.908 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.764 ; 4.764 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.628 ; 4.628 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.834 ; 4.834 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.618 ; 4.618 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.618 ; 4.618 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.834 ; 4.834 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.898 ; 4.898 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.717 ; 4.717 ; Rise       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ; 1.951 ;       ; Rise       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ; 1.951 ;       ; Rise       ; Controller:fsm|state[0] ;
; HEX2[*]   ; Controller:fsm|state[0] ; 3.836 ; 3.836 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[0]  ; Controller:fsm|state[0] ; 3.836 ; 3.836 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[1]  ; Controller:fsm|state[0] ; 3.986 ; 3.986 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[2]  ; Controller:fsm|state[0] ; 4.049 ; 4.049 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[3]  ; Controller:fsm|state[0] ; 4.056 ; 4.056 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[4]  ; Controller:fsm|state[0] ; 4.052 ; 4.052 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[5]  ; Controller:fsm|state[0] ; 3.972 ; 3.972 ; Fall       ; Controller:fsm|state[0] ;
;  HEX2[6]  ; Controller:fsm|state[0] ; 3.972 ; 3.972 ; Fall       ; Controller:fsm|state[0] ;
; HEX3[*]   ; Controller:fsm|state[0] ; 3.591 ; 3.591 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[0]  ; Controller:fsm|state[0] ; 4.032 ; 4.032 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[1]  ; Controller:fsm|state[0] ; 4.168 ; 4.168 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[2]  ; Controller:fsm|state[0] ; 4.190 ; 4.190 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[3]  ; Controller:fsm|state[0] ; 3.591 ; 3.591 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[4]  ; Controller:fsm|state[0] ; 3.783 ; 3.783 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[5]  ; Controller:fsm|state[0] ; 3.904 ; 3.904 ; Fall       ; Controller:fsm|state[0] ;
;  HEX3[6]  ; Controller:fsm|state[0] ; 3.974 ; 3.974 ; Fall       ; Controller:fsm|state[0] ;
; state[*]  ; Controller:fsm|state[0] ;       ; 1.951 ; Fall       ; Controller:fsm|state[0] ;
;  state[0] ; Controller:fsm|state[0] ;       ; 1.951 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------+
; Setup Transfers                                                                               ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; CLOCK_50                ; CLOCK_50                ; 13       ; 0        ; 0        ; 0        ;
; Controller:fsm|state[0] ; CLOCK_50                ; 6        ; 6        ; 0        ; 0        ;
; CLOCK_50                ; Controller:fsm|state[0] ; 14       ; 0        ; 14       ; 0        ;
; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1        ; 1        ; 0        ; 0        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; CLOCK_50                ; CLOCK_50                ; 13       ; 0        ; 0        ; 0        ;
; Controller:fsm|state[0] ; CLOCK_50                ; 6        ; 6        ; 0        ; 0        ;
; CLOCK_50                ; Controller:fsm|state[0] ; 14       ; 0        ; 14       ; 0        ;
; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1        ; 1        ; 0        ; 0        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 11    ; 11   ;
; Unconstrained Input Port Paths  ; 120   ; 120  ;
; Unconstrained Output Ports      ; 41    ; 41   ;
; Unconstrained Output Port Paths ; 41    ; 41   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Wed Sep 30 16:46:22 2015
Info: Command: quartus_sta EggTimer -c EggTimer
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 29 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'EggTimer.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
    Info (332105): create_clock -period 1.000 -name Controller:fsm|state[0] Controller:fsm|state[0]
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux7~0  from: datab  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.588
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.588       -29.789 Controller:fsm|state[0] 
    Info (332119):    -1.371        -3.091 CLOCK_50 
Info (332146): Worst-case hold slack is -2.772
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.772        -5.799 CLOCK_50 
    Info (332119):    -2.638        -2.638 Controller:fsm|state[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631        -5.297 CLOCK_50 
    Info (332119):     0.500         0.000 Controller:fsm|state[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux7~0  from: datab  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.035
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.035        -0.100 Controller:fsm|state[0] 
    Info (332119):     0.104         0.000 CLOCK_50 
Info (332146): Worst-case hold slack is -1.364
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.364        -3.267 CLOCK_50 
    Info (332119):    -0.964        -1.130 Controller:fsm|state[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380        -4.380 CLOCK_50 
    Info (332119):     0.500         0.000 Controller:fsm|state[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 422 megabytes
    Info: Processing ended: Wed Sep 30 16:46:23 2015
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


