TimeQuest Timing Analyzer report for EggTimer
Thu Oct 01 00:31:48 2015
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'Controller:fsm|state[0]'
 12. Slow Model Setup: 'CLOCK_50'
 13. Slow Model Hold: 'CLOCK_50'
 14. Slow Model Hold: 'Controller:fsm|state[0]'
 15. Slow Model Minimum Pulse Width: 'CLOCK_50'
 16. Slow Model Minimum Pulse Width: 'Controller:fsm|state[0]'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'Controller:fsm|state[0]'
 27. Fast Model Setup: 'CLOCK_50'
 28. Fast Model Hold: 'CLOCK_50'
 29. Fast Model Hold: 'Controller:fsm|state[0]'
 30. Fast Model Minimum Pulse Width: 'CLOCK_50'
 31. Fast Model Minimum Pulse Width: 'Controller:fsm|state[0]'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; EggTimer                                                          ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                           ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; Clock Name              ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                     ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; CLOCK_50                ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 }                ;
; Controller:fsm|state[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { Controller:fsm|state[0] } ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                                                 ;
+-------------+-----------------+-------------------------+---------------------------------------------------------------+
; Fmax        ; Restricted Fmax ; Clock Name              ; Note                                                          ;
+-------------+-----------------+-------------------------+---------------------------------------------------------------+
; 494.07 MHz  ; 380.08 MHz      ; CLOCK_50                ; limit due to minimum period restriction (max I/O toggle rate) ;
; 1006.04 MHz ; 323.62 MHz      ; Controller:fsm|state[0] ; limit due to hold check                                       ;
+-------------+-----------------+-------------------------+---------------------------------------------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------------------------+
; Slow Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -1.568 ; -21.002       ;
; CLOCK_50                ; -1.024 ; -2.294        ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -2.694 ; -4.746        ;
; Controller:fsm|state[0] ; -1.545 ; -3.406        ;
+-------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Slow Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.631 ; -22.405       ;
; Controller:fsm|state[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'Controller:fsm|state[0]'                                                                                                   ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -1.568 ; Controller:fsm|state[2] ; r3[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.193      ; 2.218      ;
; -1.558 ; Controller:fsm|state[2] ; r2[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.194      ; 2.255      ;
; -1.557 ; Controller:fsm|state[2] ; r3[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.195      ; 2.210      ;
; -1.517 ; Controller:fsm|state[1] ; LEDR[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.732      ; 1.588      ;
; -1.513 ; Controller:fsm|state[2] ; r3[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.196      ; 2.167      ;
; -1.508 ; Controller:fsm|state[2] ; en3           ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.152      ; 1.496      ;
; -1.421 ; Controller:fsm|state[2] ; LEDR[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.732      ; 1.492      ;
; -1.382 ; Controller:fsm|state[2] ; r0[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.864      ; 2.258      ;
; -1.341 ; Controller:fsm|state[2] ; r2[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.194      ; 1.991      ;
; -1.305 ; Controller:fsm|state[2] ; r2[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.195      ; 1.982      ;
; -1.297 ; Controller:fsm|state[2] ; r1[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.898      ; 2.174      ;
; -1.127 ; Controller:fsm|state[2] ; r0[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.895      ; 2.034      ;
; -1.125 ; Controller:fsm|state[2] ; r1[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.898      ; 1.988      ;
; -1.121 ; Controller:fsm|state[2] ; r1[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.898      ; 2.222      ;
; -1.075 ; Controller:fsm|state[2] ; r2[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.195      ; 1.782      ;
; -1.047 ; Controller:fsm|state[2] ; r0[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.897      ; 1.948      ;
; -0.961 ; Controller:fsm|state[2] ; r0[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.863      ; 2.022      ;
; 0.003  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 1.973      ; 1.349      ;
; 0.296  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 2.184      ; 1.501      ;
; 0.503  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 1.973      ; 1.349      ;
; 0.796  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 2.184      ; 1.501      ;
; 0.884  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 2.764      ; 1.496      ;
; 1.384  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 2.764      ; 1.496      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                  ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                   ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; -1.024 ; Controller:fsm|state[2] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 2.062      ;
; -0.870 ; Controller:fsm|state[1] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 1.908      ;
; -0.686 ; Controller:fsm|state[2] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 1.724      ;
; -0.584 ; Controller:fsm|state[2] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.830      ; 2.452      ;
; -0.532 ; Controller:fsm|state[1] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 1.570      ;
; -0.430 ; Controller:fsm|state[1] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.830      ; 2.298      ;
; 0.076  ; r3[0]                   ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.366     ; 0.096      ;
; 0.077  ; r3[1]                   ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.365     ; 0.096      ;
; 0.077  ; r2[2]                   ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.365     ; 0.096      ;
; 0.077  ; r2[1]                   ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.365     ; 0.096      ;
; 0.078  ; r2[0]                   ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.364     ; 0.096      ;
; 0.078  ; r2[3]                   ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.364     ; 0.096      ;
; 0.079  ; r3[2]                   ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.363     ; 0.096      ;
; 0.448  ; en3                     ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.678      ; 1.268      ;
; 0.448  ; en3                     ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.678      ; 1.268      ;
; 0.448  ; en3                     ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.678      ; 1.268      ;
; 0.448  ; en3                     ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.678      ; 1.268      ;
; 0.448  ; en3                     ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.678      ; 1.268      ;
; 0.448  ; en3                     ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.678      ; 1.268      ;
; 0.448  ; en3                     ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.678      ; 1.268      ;
; 0.661  ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.032      ; 2.186      ;
; 0.670  ; en1                     ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.891      ; 1.259      ;
; 0.670  ; en1                     ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.891      ; 1.259      ;
; 0.670  ; en1                     ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.891      ; 1.259      ;
; 0.670  ; en1                     ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.891      ; 1.259      ;
; 0.670  ; en1                     ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.891      ; 1.259      ;
; 0.725  ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.032      ; 2.122      ;
; 0.876  ; r1[0]                   ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.066     ; 0.096      ;
; 0.876  ; r1[2]                   ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.066     ; 0.096      ;
; 0.876  ; r1[1]                   ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.066     ; 0.096      ;
; 0.877  ; r0[1]                   ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.065     ; 0.096      ;
; 0.879  ; r0[3]                   ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.063     ; 0.096      ;
; 0.885  ; en1                     ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.889      ; 1.042      ;
; 0.885  ; en1                     ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.889      ; 1.042      ;
; 0.908  ; r0[0]                   ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.034     ; 0.096      ;
; 0.909  ; r0[2]                   ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.033     ; 0.096      ;
; 1.135  ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.862      ; 2.542      ;
; 1.161  ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.032      ; 2.186      ;
; 1.225  ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.032      ; 2.122      ;
; 1.635  ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.862      ; 2.542      ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                   ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                   ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; -2.694 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.862      ; 0.731      ;
; -2.194 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.862      ; 0.731      ;
; -0.642 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.032      ; 1.953      ;
; -0.473 ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.032      ; 2.122      ;
; -0.157 ; r0[2]                   ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.033     ; 0.096      ;
; -0.156 ; r0[0]                   ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.034     ; 0.096      ;
; -0.142 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.032      ; 1.953      ;
; -0.133 ; en1                     ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.889      ; 1.042      ;
; -0.133 ; en1                     ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.889      ; 1.042      ;
; -0.127 ; r0[3]                   ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.063     ; 0.096      ;
; -0.125 ; r0[1]                   ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.065     ; 0.096      ;
; -0.124 ; r1[0]                   ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.066     ; 0.096      ;
; -0.124 ; r1[2]                   ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.066     ; 0.096      ;
; -0.124 ; r1[1]                   ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.066     ; 0.096      ;
; 0.027  ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.032      ; 2.122      ;
; 0.082  ; en1                     ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.891      ; 1.259      ;
; 0.082  ; en1                     ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.891      ; 1.259      ;
; 0.082  ; en1                     ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.891      ; 1.259      ;
; 0.082  ; en1                     ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.891      ; 1.259      ;
; 0.082  ; en1                     ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.891      ; 1.259      ;
; 0.304  ; en3                     ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.678      ; 1.268      ;
; 0.304  ; en3                     ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.678      ; 1.268      ;
; 0.304  ; en3                     ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.678      ; 1.268      ;
; 0.304  ; en3                     ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.678      ; 1.268      ;
; 0.304  ; en3                     ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.678      ; 1.268      ;
; 0.304  ; en3                     ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.678      ; 1.268      ;
; 0.304  ; en3                     ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.678      ; 1.268      ;
; 0.445  ; Controller:fsm|state[1] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 0.673  ; r3[2]                   ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.363     ; 0.096      ;
; 0.674  ; r2[0]                   ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.364     ; 0.096      ;
; 0.674  ; r2[3]                   ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.364     ; 0.096      ;
; 0.675  ; r3[1]                   ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.365     ; 0.096      ;
; 0.675  ; r2[2]                   ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.365     ; 0.096      ;
; 0.675  ; r2[1]                   ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.365     ; 0.096      ;
; 0.676  ; r3[0]                   ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.366     ; 0.096      ;
; 0.900  ; Controller:fsm|state[1] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.830      ; 2.016      ;
; 1.186  ; Controller:fsm|state[2] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.830      ; 2.302      ;
; 1.284  ; Controller:fsm|state[1] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 1.570      ;
; 1.438  ; Controller:fsm|state[2] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 1.724      ;
; 1.726  ; Controller:fsm|state[2] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 2.012      ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'Controller:fsm|state[0]'                                                                                                    ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -1.545 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 2.764      ; 1.496      ;
; -1.045 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 2.764      ; 1.496      ;
; -0.960 ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 2.184      ; 1.501      ;
; -0.901 ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 1.973      ; 1.349      ;
; -0.460 ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 2.184      ; 1.501      ;
; -0.401 ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 1.973      ; 1.349      ;
; 1.051  ; Controller:fsm|state[2] ; r0[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.897      ; 1.948      ;
; 1.087  ; Controller:fsm|state[2] ; r2[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.195      ; 1.782      ;
; 1.090  ; Controller:fsm|state[2] ; r1[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.898      ; 1.988      ;
; 1.139  ; Controller:fsm|state[2] ; r0[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.895      ; 2.034      ;
; 1.159  ; Controller:fsm|state[2] ; r0[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.863      ; 2.022      ;
; 1.243  ; Controller:fsm|state[2] ; r0[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.864      ; 2.107      ;
; 1.260  ; Controller:fsm|state[2] ; LEDR[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.732      ; 1.492      ;
; 1.276  ; Controller:fsm|state[2] ; r1[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.898      ; 2.174      ;
; 1.287  ; Controller:fsm|state[2] ; r2[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.195      ; 1.982      ;
; 1.297  ; Controller:fsm|state[2] ; r2[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.194      ; 1.991      ;
; 1.324  ; Controller:fsm|state[2] ; r1[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.898      ; 2.222      ;
; 1.344  ; Controller:fsm|state[2] ; en3           ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.152      ; 1.496      ;
; 1.356  ; Controller:fsm|state[1] ; LEDR[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.732      ; 1.588      ;
; 1.410  ; Controller:fsm|state[2] ; r2[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.194      ; 2.104      ;
; 1.471  ; Controller:fsm|state[2] ; r3[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.196      ; 2.167      ;
; 1.515  ; Controller:fsm|state[2] ; r3[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.195      ; 2.210      ;
; 1.525  ; Controller:fsm|state[2] ; r3[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.193      ; 2.218      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[0]   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[0]   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[1]   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[1]   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[2]   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[2]   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[3] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[2]|clk          ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'Controller:fsm|state[0]'                                                                 ;
+-------+--------------+----------------+------------------+-------------------------+------------+-------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target                  ;
+-------+--------------+----------------+------------------+-------------------------+------------+-------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; LEDR[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; LEDR[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; LEDR[0]$latch|datab     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; LEDR[0]$latch|datab     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux10~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux10~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux10~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux10~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux10~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux10~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux10~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux10~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux19~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux19~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux19~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux19~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux1~0clkctrl|inclk[0]  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux1~0clkctrl|inclk[0]  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux1~0clkctrl|outclk    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux1~0clkctrl|outclk    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux1~0|combout          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux1~0|combout          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux1~0|datab            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux1~0|datab            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux21~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux21~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux21~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux21~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; Mux23~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; Mux23~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux23~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux23~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en1                     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en1                     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en1|datab               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en1|datab               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en3                     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en3                     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en3|datab               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en3|datab               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; fsm|state[0]|regout     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; fsm|state[0]|regout     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[3]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[3]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[3]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[3]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[3]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[3]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[3]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[3]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[2]|datad             ;
+-------+--------------+----------------+------------------+-------------------------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 6.953 ; 6.953 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 6.584 ; 6.584 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 6.903 ; 6.903 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 6.953 ; 6.953 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 3.171 ; 3.171 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 2.690 ; 2.690 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 2.885 ; 2.885 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 3.159 ; 3.159 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 2.561 ; 2.561 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 2.599 ; 2.599 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.899 ; 2.899 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 3.171 ; 3.171 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 1.433 ; 1.433 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 3.059 ; 3.059 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 2.366 ; 2.366 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 2.561 ; 2.561 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 2.835 ; 2.835 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 2.237 ; 2.237 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 2.487 ; 2.487 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.787 ; 2.787 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 3.059 ; 3.059 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 1.321 ; 1.321 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -4.987 ; -4.987 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -4.987 ; -4.987 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -6.215 ; -6.215 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -6.265 ; -6.265 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; -0.014 ; -0.014 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -1.702 ; -1.702 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -1.553 ; -1.553 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -1.939 ; -1.939 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -1.169 ; -1.169 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -1.564 ; -1.564 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -1.436 ; -1.436 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -1.643 ; -1.643 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; -0.014 ; -0.014 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.247  ; 0.247  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -1.369 ; -1.369 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -1.289 ; -1.289 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -1.367 ; -1.367 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.707 ; -0.707 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -1.445 ; -1.445 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -1.175 ; -1.175 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -1.382 ; -1.382 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.247  ; 0.247  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 9.229  ; 9.229  ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 8.482  ; 8.482  ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 8.510  ; 8.510  ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 8.846  ; 8.846  ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 8.847  ; 8.847  ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 9.229  ; 9.229  ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 8.868  ; 8.868  ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 8.873  ; 8.873  ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 8.930  ; 8.930  ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 8.928  ; 8.928  ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 8.904  ; 8.904  ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 8.840  ; 8.840  ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 8.930  ; 8.930  ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 8.913  ; 8.913  ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 8.900  ; 8.900  ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 8.907  ; 8.907  ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 9.258  ; 9.258  ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 9.258  ; 9.258  ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 9.016  ; 9.016  ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 9.060  ; 9.060  ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 9.018  ; 9.018  ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 8.906  ; 8.906  ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 8.990  ; 8.990  ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 8.980  ; 8.980  ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 9.009  ; 9.009  ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 8.811  ; 8.811  ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 9.009  ; 9.009  ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 9.005  ; 9.005  ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 8.816  ; 8.816  ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 8.799  ; 8.799  ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 8.810  ; 8.810  ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 8.832  ; 8.832  ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 9.926  ; 9.926  ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 9.414  ; 9.414  ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.389  ; 7.711  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 7.389  ; 7.389  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;        ; 7.711  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 6.873  ;        ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.711  ; 7.389  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 7.389  ; 7.389  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 7.711  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;        ; 6.873  ; Fall       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 10.753 ; 10.753 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.753 ; 10.753 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.395 ; 10.395 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 10.022 ; 10.022 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 9.674  ; 9.674  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 10.157 ; 10.157 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 9.664  ; 9.664  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 9.664  ; 9.664  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 10.157 ; 10.157 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.385 ; 10.385 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 9.994  ; 9.994  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 8.073  ; 8.073  ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 8.073  ; 8.073  ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 8.109  ; 8.109  ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 8.443  ; 8.443  ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 8.447  ; 8.447  ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 8.740  ; 8.740  ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 8.466  ; 8.466  ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 8.464  ; 8.464  ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 8.574  ; 8.574  ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 8.603  ; 8.603  ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 8.579  ; 8.579  ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 8.574  ; 8.574  ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 8.600  ; 8.600  ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 8.588  ; 8.588  ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 8.602  ; 8.602  ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 8.607  ; 8.607  ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 8.557  ; 8.557  ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 8.920  ; 8.920  ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 8.677  ; 8.677  ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 8.810  ; 8.810  ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 8.681  ; 8.681  ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 8.557  ; 8.557  ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 8.646  ; 8.646  ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 8.639  ; 8.639  ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 8.709  ; 8.709  ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 8.718  ; 8.718  ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 8.915  ; 8.915  ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 8.826  ; 8.826  ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 8.717  ; 8.717  ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 8.709  ; 8.709  ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 8.716  ; 8.716  ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 8.741  ; 8.741  ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 9.309  ; 9.309  ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 9.876  ; 9.876  ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 9.309  ; 9.309  ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 6.873  ; 7.389  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 7.389  ; 7.389  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;        ; 7.711  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 6.873  ;        ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.389  ; 6.873  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 7.389  ; 7.389  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 7.711  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;        ; 6.873  ; Fall       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 9.664  ; 9.664  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.753 ; 10.753 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.395 ; 10.395 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 10.022 ; 10.022 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 9.674  ; 9.674  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 10.157 ; 10.157 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 9.664  ; 9.664  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 9.664  ; 9.664  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 10.157 ; 10.157 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.385 ; 10.385 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 9.994  ; 9.994  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------+
; Fast Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -0.604 ; -0.859        ;
; CLOCK_50                ; 0.227  ; 0.000         ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.721 ; -11.715       ;
; Controller:fsm|state[0] ; -0.526 ; -1.167        ;
+-------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Fast Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.380 ; -18.380       ;
; Controller:fsm|state[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'Controller:fsm|state[0]'                                                                                                   ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -0.604 ; Controller:fsm|state[1] ; LEDR[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; -0.044     ; 0.661      ;
; -0.568 ; Controller:fsm|state[2] ; LEDR[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; -0.044     ; 0.625      ;
; -0.246 ; Controller:fsm|state[2] ; en3           ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; -0.237     ; 0.603      ;
; -0.009 ; Controller:fsm|state[2] ; r2[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.715      ; 0.882      ;
; 0.004  ; Controller:fsm|state[2] ; r3[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.716      ; 0.857      ;
; 0.013  ; Controller:fsm|state[2] ; r3[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.718      ; 0.851      ;
; 0.014  ; Controller:fsm|state[2] ; r3[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.718      ; 0.850      ;
; 0.071  ; Controller:fsm|state[2] ; r2[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.715      ; 0.789      ;
; 0.083  ; Controller:fsm|state[2] ; r2[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.718      ; 0.784      ;
; 0.164  ; Controller:fsm|state[2] ; r2[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.717      ; 0.717      ;
; 0.325  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 0.717      ; 0.546      ;
; 0.368  ; Controller:fsm|state[2] ; r0[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.588      ; 0.879      ;
; 0.422  ; Controller:fsm|state[2] ; r1[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.610      ; 0.831      ;
; 0.423  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 0.800      ; 0.612      ;
; 0.462  ; Controller:fsm|state[2] ; r0[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.607      ; 0.803      ;
; 0.484  ; Controller:fsm|state[2] ; r1[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.610      ; 0.769      ;
; 0.486  ; Controller:fsm|state[2] ; r0[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.609      ; 0.776      ;
; 0.488  ; Controller:fsm|state[2] ; r1[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.610      ; 0.845      ;
; 0.517  ; Controller:fsm|state[2] ; r0[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.587      ; 0.791      ;
; 0.627  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 0.993      ; 0.608      ;
; 0.825  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 0.717      ; 0.546      ;
; 0.923  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 0.800      ; 0.612      ;
; 1.127  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 0.993      ; 0.608      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                                 ;
+-------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack ; From Node               ; To Node                   ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; 0.227 ; Controller:fsm|state[2] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.805      ;
; 0.277 ; Controller:fsm|state[1] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.755      ;
; 0.329 ; Controller:fsm|state[2] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.703      ;
; 0.379 ; Controller:fsm|state[1] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.653      ;
; 0.531 ; r3[0]                   ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 0.041      ; 0.042      ;
; 0.531 ; r3[1]                   ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 0.041      ; 0.042      ;
; 0.531 ; r2[1]                   ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 0.041      ; 0.042      ;
; 0.532 ; r2[2]                   ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 0.042      ; 0.042      ;
; 0.533 ; r3[2]                   ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 0.043      ; 0.042      ;
; 0.534 ; r2[0]                   ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 0.044      ; 0.042      ;
; 0.534 ; r2[3]                   ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 0.044      ; 0.042      ;
; 0.856 ; Controller:fsm|state[2] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.758      ; 0.934      ;
; 0.860 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.037      ; 0.850      ;
; 0.865 ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.037      ; 0.845      ;
; 0.906 ; Controller:fsm|state[1] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.758      ; 0.884      ;
; 1.140 ; r1[0]                   ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.150      ; 0.042      ;
; 1.140 ; r1[2]                   ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.150      ; 0.042      ;
; 1.140 ; r1[1]                   ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.150      ; 0.042      ;
; 1.141 ; r0[1]                   ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.151      ; 0.042      ;
; 1.143 ; r0[3]                   ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.153      ; 0.042      ;
; 1.161 ; r0[0]                   ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.171      ; 0.042      ;
; 1.162 ; r0[2]                   ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.172      ; 0.042      ;
; 1.360 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.037      ; 0.850      ;
; 1.365 ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.037      ; 0.845      ;
; 1.465 ; en3                     ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.996      ; 0.563      ;
; 1.465 ; en3                     ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.996      ; 0.563      ;
; 1.465 ; en3                     ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.996      ; 0.563      ;
; 1.465 ; en3                     ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.996      ; 0.563      ;
; 1.465 ; en3                     ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.996      ; 0.563      ;
; 1.465 ; en3                     ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.996      ; 0.563      ;
; 1.465 ; en3                     ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.996      ; 0.563      ;
; 1.499 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.795      ; 0.969      ;
; 1.554 ; en1                     ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.080      ; 0.558      ;
; 1.554 ; en1                     ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.080      ; 0.558      ;
; 1.554 ; en1                     ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.080      ; 0.558      ;
; 1.554 ; en1                     ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.080      ; 0.558      ;
; 1.554 ; en1                     ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.080      ; 0.558      ;
; 1.627 ; en1                     ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.079      ; 0.484      ;
; 1.627 ; en1                     ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.079      ; 0.484      ;
; 1.999 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.795      ; 0.969      ;
+-------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                   ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                   ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; -1.721 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.795      ; 0.367      ;
; -1.221 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.795      ; 0.367      ;
; -0.747 ; en1                     ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.079      ; 0.484      ;
; -0.747 ; en1                     ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.079      ; 0.484      ;
; -0.674 ; en1                     ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.080      ; 0.558      ;
; -0.674 ; en1                     ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.080      ; 0.558      ;
; -0.674 ; en1                     ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.080      ; 0.558      ;
; -0.674 ; en1                     ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.080      ; 0.558      ;
; -0.674 ; en1                     ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.080      ; 0.558      ;
; -0.585 ; en3                     ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.996      ; 0.563      ;
; -0.585 ; en3                     ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.996      ; 0.563      ;
; -0.585 ; en3                     ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.996      ; 0.563      ;
; -0.585 ; en3                     ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.996      ; 0.563      ;
; -0.585 ; en3                     ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.996      ; 0.563      ;
; -0.585 ; en3                     ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.996      ; 0.563      ;
; -0.585 ; en3                     ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.996      ; 0.563      ;
; -0.550 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.037      ; 0.780      ;
; -0.485 ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.037      ; 0.845      ;
; -0.282 ; r0[2]                   ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.172      ; 0.042      ;
; -0.281 ; r0[0]                   ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.171      ; 0.042      ;
; -0.263 ; r0[3]                   ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.153      ; 0.042      ;
; -0.261 ; r0[1]                   ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.151      ; 0.042      ;
; -0.260 ; r1[0]                   ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.150      ; 0.042      ;
; -0.260 ; r1[2]                   ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.150      ; 0.042      ;
; -0.260 ; r1[1]                   ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.150      ; 0.042      ;
; -0.126 ; Controller:fsm|state[1] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.758      ; 0.784      ;
; -0.050 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.037      ; 0.780      ;
; -0.011 ; Controller:fsm|state[2] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.758      ; 0.899      ;
; 0.015  ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.037      ; 0.845      ;
; 0.215  ; Controller:fsm|state[1] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.346  ; r2[0]                   ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 0.044      ; 0.042      ;
; 0.346  ; r2[3]                   ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 0.044      ; 0.042      ;
; 0.347  ; r3[2]                   ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 0.043      ; 0.042      ;
; 0.348  ; r2[2]                   ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 0.042      ; 0.042      ;
; 0.349  ; r3[0]                   ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 0.041      ; 0.042      ;
; 0.349  ; r3[1]                   ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 0.041      ; 0.042      ;
; 0.349  ; r2[1]                   ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 0.041      ; 0.042      ;
; 0.501  ; Controller:fsm|state[1] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.653      ;
; 0.551  ; Controller:fsm|state[2] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.703      ;
; 0.638  ; Controller:fsm|state[2] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.790      ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'Controller:fsm|state[0]'                                                                                                    ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -0.526 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 0.993      ; 0.608      ;
; -0.329 ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 0.800      ; 0.612      ;
; -0.312 ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 0.717      ; 0.546      ;
; -0.026 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 0.993      ; 0.608      ;
; 0.159  ; Controller:fsm|state[2] ; r1[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.610      ; 0.769      ;
; 0.167  ; Controller:fsm|state[2] ; r0[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.609      ; 0.776      ;
; 0.171  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 0.800      ; 0.612      ;
; 0.188  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 0.717      ; 0.546      ;
; 0.196  ; Controller:fsm|state[2] ; r0[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.607      ; 0.803      ;
; 0.204  ; Controller:fsm|state[2] ; r0[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.587      ; 0.791      ;
; 0.221  ; Controller:fsm|state[2] ; r1[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.610      ; 0.831      ;
; 0.235  ; Controller:fsm|state[2] ; r1[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.610      ; 0.845      ;
; 0.245  ; Controller:fsm|state[2] ; r0[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.588      ; 0.833      ;
; 0.500  ; Controller:fsm|state[2] ; r2[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.717      ; 0.717      ;
; 0.566  ; Controller:fsm|state[2] ; r2[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.718      ; 0.784      ;
; 0.574  ; Controller:fsm|state[2] ; r2[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.715      ; 0.789      ;
; 0.621  ; Controller:fsm|state[2] ; r2[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.715      ; 0.836      ;
; 0.632  ; Controller:fsm|state[2] ; r3[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.718      ; 0.850      ;
; 0.633  ; Controller:fsm|state[2] ; r3[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.718      ; 0.851      ;
; 0.641  ; Controller:fsm|state[2] ; r3[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.716      ; 0.857      ;
; 0.840  ; Controller:fsm|state[2] ; en3           ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; -0.237     ; 0.603      ;
; 1.169  ; Controller:fsm|state[2] ; LEDR[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; -0.044     ; 0.625      ;
; 1.205  ; Controller:fsm|state[1] ; LEDR[0]$latch ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; -0.044     ; 0.661      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[3] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[2]|clk          ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'Controller:fsm|state[0]'                                                                 ;
+-------+--------------+----------------+------------------+-------------------------+------------+-------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target                  ;
+-------+--------------+----------------+------------------+-------------------------+------------+-------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; LEDR[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; LEDR[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; LEDR[0]$latch|datab     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; LEDR[0]$latch|datab     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux10~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux10~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux10~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux10~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux10~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux10~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux10~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux10~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux19~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux19~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux19~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux19~0|dataa           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux1~0clkctrl|inclk[0]  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux1~0clkctrl|inclk[0]  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux1~0clkctrl|outclk    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux1~0clkctrl|outclk    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux1~0|combout          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux1~0|combout          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux1~0|datab            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux1~0|datab            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux21~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux21~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux21~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux21~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; Mux23~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; Mux23~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux23~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux23~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en1                     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en1                     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en1|datab               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en1|datab               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en3                     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en3                     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en3|datab               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en3|datab               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; fsm|state[0]|regout     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; fsm|state[0]|regout     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[3]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[3]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[3]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[3]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[3]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[3]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[3]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[3]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[0]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[0]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[1]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[1]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[2]                   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[2]|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[2]|datad             ;
+-------+--------------+----------------+------------------+-------------------------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 3.433 ; 3.433 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 3.326 ; 3.326 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 3.404 ; 3.404 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 3.433 ; 3.433 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.868 ; 0.868 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.673 ; 0.673 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.739 ; 0.739 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.847 ; 0.847 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.621 ; 0.621 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.647 ; 0.647 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.787 ; 0.787 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.868 ; 0.868 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.136 ; 0.136 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.838 ; 0.838 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.550 ; 0.550 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.616 ; 0.616 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.724 ; 0.724 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.498 ; 0.498 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.617 ; 0.617 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.757 ; 0.757 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.838 ; 0.838 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.106 ; 0.106 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -2.244 ; -2.244 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -2.244 ; -2.244 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -2.655 ; -2.655 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -2.684 ; -2.684 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.394  ; 0.394  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.332 ; -0.332 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.298 ; -0.298 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.421 ; -0.421 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.155 ; -0.155 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.290 ; -0.290 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.263 ; -0.263 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.338 ; -0.338 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.394  ; 0.394  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.482  ; 0.482  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.208 ; -0.208 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.197 ; -0.197 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.217 ; -0.217 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.010  ; 0.010  ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.263 ; -0.263 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.175 ; -0.175 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.250 ; -0.250 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.482  ; 0.482  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                      ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 4.651 ; 4.651 ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 4.388 ; 4.388 ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 4.404 ; 4.404 ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 4.537 ; 4.537 ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 4.531 ; 4.531 ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 4.651 ; 4.651 ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 4.552 ; 4.552 ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 4.557 ; 4.557 ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 4.563 ; 4.563 ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 4.552 ; 4.552 ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 4.530 ; 4.530 ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 4.529 ; 4.529 ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 4.545 ; 4.545 ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 4.538 ; 4.538 ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 4.558 ; 4.558 ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 4.563 ; 4.563 ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 4.679 ; 4.679 ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 4.679 ; 4.679 ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 4.600 ; 4.600 ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 4.639 ; 4.639 ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 4.625 ; 4.625 ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 4.545 ; 4.545 ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 4.590 ; 4.590 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 4.596 ; 4.596 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 4.716 ; 4.716 ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 4.542 ; 4.542 ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 4.694 ; 4.694 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 4.716 ; 4.716 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 4.549 ; 4.549 ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 4.530 ; 4.530 ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 4.543 ; 4.543 ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 4.563 ; 4.563 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 4.582 ; 4.582 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 4.485 ; 4.485 ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 4.582 ; 4.582 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 4.309 ; 4.309 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 3.234 ; 3.323 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 3.234 ; 3.234 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;       ; 3.323 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 3.077 ;       ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 3.323 ; 3.234 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 3.234 ; 3.234 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 3.323 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;       ; 3.077 ; Fall       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.473 ; 4.473 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.473 ; 4.473 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.323 ; 4.323 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.172 ; 4.172 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.034 ; 4.034 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.266 ; 4.266 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.024 ; 4.024 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.024 ; 4.024 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.266 ; 4.266 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.313 ; 4.313 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.146 ; 4.146 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 4.212 ; 4.212 ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 4.212 ; 4.212 ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 4.271 ; 4.271 ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 4.365 ; 4.365 ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 4.374 ; 4.374 ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 4.491 ; 4.491 ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 4.389 ; 4.389 ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 4.389 ; 4.389 ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 4.419 ; 4.419 ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 4.447 ; 4.447 ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 4.420 ; 4.420 ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 4.419 ; 4.419 ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 4.439 ; 4.439 ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 4.433 ; 4.433 ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 4.451 ; 4.451 ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 4.456 ; 4.456 ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 4.423 ; 4.423 ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 4.560 ; 4.560 ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 4.485 ; 4.485 ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 4.522 ; 4.522 ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 4.506 ; 4.506 ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 4.423 ; 4.423 ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 4.470 ; 4.470 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 4.474 ; 4.474 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 4.461 ; 4.461 ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 4.473 ; 4.473 ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 4.625 ; 4.625 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 4.622 ; 4.622 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 4.472 ; 4.472 ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 4.461 ; 4.461 ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 4.468 ; 4.468 ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 4.494 ; 4.494 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 4.296 ; 4.296 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 4.470 ; 4.470 ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 4.582 ; 4.582 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 4.296 ; 4.296 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 3.077 ; 3.234 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 3.234 ; 3.234 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;       ; 3.323 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 3.077 ;       ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 3.234 ; 3.077 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 3.234 ; 3.234 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 3.323 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;       ; 3.077 ; Fall       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.024 ; 4.024 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.473 ; 4.473 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.323 ; 4.323 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.172 ; 4.172 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.034 ; 4.034 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.266 ; 4.266 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.024 ; 4.024 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.024 ; 4.024 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.266 ; 4.266 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.313 ; 4.313 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.146 ; 4.146 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+-----------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                     ;
+--------------------------+---------+---------+----------+---------+---------------------+
; Clock                    ; Setup   ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+--------------------------+---------+---------+----------+---------+---------------------+
; Worst-case Slack         ; -1.568  ; -2.694  ; N/A      ; N/A     ; -1.631              ;
;  CLOCK_50                ; -1.024  ; -2.694  ; N/A      ; N/A     ; -1.631              ;
;  Controller:fsm|state[0] ; -1.568  ; -1.545  ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS          ; -23.296 ; -12.882 ; 0.0      ; 0.0     ; -22.405             ;
;  CLOCK_50                ; -2.294  ; -11.715 ; N/A      ; N/A     ; -22.405             ;
;  Controller:fsm|state[0] ; -21.002 ; -3.406  ; N/A      ; N/A     ; 0.000               ;
+--------------------------+---------+---------+----------+---------+---------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 6.953 ; 6.953 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 6.584 ; 6.584 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 6.903 ; 6.903 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 6.953 ; 6.953 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 3.171 ; 3.171 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 2.690 ; 2.690 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 2.885 ; 2.885 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 3.159 ; 3.159 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 2.561 ; 2.561 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 2.599 ; 2.599 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.899 ; 2.899 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 3.171 ; 3.171 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 1.433 ; 1.433 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 3.059 ; 3.059 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 2.366 ; 2.366 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 2.561 ; 2.561 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 2.835 ; 2.835 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 2.237 ; 2.237 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 2.487 ; 2.487 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 2.787 ; 2.787 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 3.059 ; 3.059 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 1.321 ; 1.321 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -2.244 ; -2.244 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -2.244 ; -2.244 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -2.655 ; -2.655 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -2.684 ; -2.684 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.394  ; 0.394  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.332 ; -0.332 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.298 ; -0.298 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.421 ; -0.421 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.155 ; -0.155 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.290 ; -0.290 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.263 ; -0.263 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.338 ; -0.338 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.394  ; 0.394  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.482  ; 0.482  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.208 ; -0.208 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.197 ; -0.197 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.217 ; -0.217 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.010  ; 0.010  ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.263 ; -0.263 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.175 ; -0.175 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.250 ; -0.250 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.482  ; 0.482  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 9.229  ; 9.229  ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 8.482  ; 8.482  ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 8.510  ; 8.510  ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 8.846  ; 8.846  ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 8.847  ; 8.847  ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 9.229  ; 9.229  ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 8.868  ; 8.868  ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 8.873  ; 8.873  ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 8.930  ; 8.930  ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 8.928  ; 8.928  ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 8.904  ; 8.904  ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 8.840  ; 8.840  ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 8.930  ; 8.930  ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 8.913  ; 8.913  ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 8.900  ; 8.900  ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 8.907  ; 8.907  ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 9.258  ; 9.258  ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 9.258  ; 9.258  ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 9.016  ; 9.016  ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 9.060  ; 9.060  ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 9.018  ; 9.018  ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 8.906  ; 8.906  ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 8.990  ; 8.990  ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 8.980  ; 8.980  ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 9.009  ; 9.009  ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 8.811  ; 8.811  ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 9.009  ; 9.009  ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 9.005  ; 9.005  ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 8.816  ; 8.816  ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 8.799  ; 8.799  ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 8.810  ; 8.810  ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 8.832  ; 8.832  ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 9.926  ; 9.926  ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 9.414  ; 9.414  ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.389  ; 7.711  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 7.389  ; 7.389  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;        ; 7.711  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 6.873  ;        ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.711  ; 7.389  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 7.389  ; 7.389  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 7.711  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;        ; 6.873  ; Fall       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 10.753 ; 10.753 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.753 ; 10.753 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.395 ; 10.395 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 10.022 ; 10.022 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 9.674  ; 9.674  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 10.157 ; 10.157 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 9.664  ; 9.664  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 9.664  ; 9.664  ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 10.157 ; 10.157 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.385 ; 10.385 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 9.994  ; 9.994  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 4.212 ; 4.212 ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 4.212 ; 4.212 ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 4.271 ; 4.271 ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 4.365 ; 4.365 ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 4.374 ; 4.374 ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 4.491 ; 4.491 ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 4.389 ; 4.389 ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 4.389 ; 4.389 ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 4.419 ; 4.419 ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 4.447 ; 4.447 ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 4.420 ; 4.420 ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 4.419 ; 4.419 ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 4.439 ; 4.439 ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 4.433 ; 4.433 ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 4.451 ; 4.451 ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 4.456 ; 4.456 ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 4.423 ; 4.423 ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 4.560 ; 4.560 ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 4.485 ; 4.485 ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 4.522 ; 4.522 ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 4.506 ; 4.506 ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 4.423 ; 4.423 ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 4.470 ; 4.470 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 4.474 ; 4.474 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 4.461 ; 4.461 ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 4.473 ; 4.473 ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 4.625 ; 4.625 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 4.622 ; 4.622 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 4.472 ; 4.472 ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 4.461 ; 4.461 ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 4.468 ; 4.468 ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 4.494 ; 4.494 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 4.296 ; 4.296 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 4.470 ; 4.470 ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 4.582 ; 4.582 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 4.296 ; 4.296 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 3.077 ; 3.234 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 3.234 ; 3.234 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;       ; 3.323 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 3.077 ;       ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 3.234 ; 3.077 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 3.234 ; 3.234 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 3.323 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;       ; 3.077 ; Fall       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.024 ; 4.024 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.473 ; 4.473 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.323 ; 4.323 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.172 ; 4.172 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.034 ; 4.034 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.266 ; 4.266 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.024 ; 4.024 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.024 ; 4.024 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.266 ; 4.266 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.313 ; 4.313 ; Fall       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.146 ; 4.146 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------+
; Setup Transfers                                                                               ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; CLOCK_50                ; CLOCK_50                ; 13       ; 0        ; 0        ; 0        ;
; Controller:fsm|state[0] ; CLOCK_50                ; 27       ; 13       ; 0        ; 0        ;
; CLOCK_50                ; Controller:fsm|state[0] ; 9        ; 0        ; 10       ; 0        ;
; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 2        ; 2        ; 1        ; 1        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; CLOCK_50                ; CLOCK_50                ; 13       ; 0        ; 0        ; 0        ;
; Controller:fsm|state[0] ; CLOCK_50                ; 27       ; 13       ; 0        ; 0        ;
; CLOCK_50                ; Controller:fsm|state[0] ; 9        ; 0        ; 10       ; 0        ;
; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 2        ; 2        ; 1        ; 1        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 11    ; 11   ;
; Unconstrained Input Port Paths  ; 44    ; 44   ;
; Unconstrained Output Ports      ; 41    ; 41   ;
; Unconstrained Output Port Paths ; 116   ; 116  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Thu Oct 01 00:31:46 2015
Info: Command: quartus_sta EggTimer -c EggTimer
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 17 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'EggTimer.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
    Info (332105): create_clock -period 1.000 -name Controller:fsm|state[0] Controller:fsm|state[0]
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux1~0  from: datab  to: combout
    Info (332098): Cell: Mux21~0  from: datab  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.568
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.568       -21.002 Controller:fsm|state[0] 
    Info (332119):    -1.024        -2.294 CLOCK_50 
Info (332146): Worst-case hold slack is -2.694
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.694        -4.746 CLOCK_50 
    Info (332119):    -1.545        -3.406 Controller:fsm|state[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631       -22.405 CLOCK_50 
    Info (332119):     0.500         0.000 Controller:fsm|state[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux1~0  from: datab  to: combout
    Info (332098): Cell: Mux21~0  from: datab  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.604
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.604        -0.859 Controller:fsm|state[0] 
    Info (332119):     0.227         0.000 CLOCK_50 
Info (332146): Worst-case hold slack is -1.721
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.721       -11.715 CLOCK_50 
    Info (332119):    -0.526        -1.167 Controller:fsm|state[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -18.380 CLOCK_50 
    Info (332119):     0.500         0.000 Controller:fsm|state[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 422 megabytes
    Info: Processing ended: Thu Oct 01 00:31:48 2015
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


