TimeQuest Timing Analyzer report for EggTimer
Wed Sep 30 22:40:55 2015
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'Controller:fsm|state[0]'
 12. Slow Model Setup: 'CLOCK_50'
 13. Slow Model Hold: 'Controller:fsm|state[0]'
 14. Slow Model Hold: 'CLOCK_50'
 15. Slow Model Minimum Pulse Width: 'CLOCK_50'
 16. Slow Model Minimum Pulse Width: 'Controller:fsm|state[0]'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'Controller:fsm|state[0]'
 27. Fast Model Setup: 'CLOCK_50'
 28. Fast Model Hold: 'CLOCK_50'
 29. Fast Model Hold: 'Controller:fsm|state[0]'
 30. Fast Model Minimum Pulse Width: 'CLOCK_50'
 31. Fast Model Minimum Pulse Width: 'Controller:fsm|state[0]'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; EggTimer                                                          ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                           ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; Clock Name              ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                     ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+
; CLOCK_50                ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 }                ;
; Controller:fsm|state[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { Controller:fsm|state[0] } ;
+-------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------------+


+---------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                         ;
+-----------+-----------------+-------------------------+-------------------------+
; Fmax      ; Restricted Fmax ; Clock Name              ; Note                    ;
+-----------+-----------------+-------------------------+-------------------------+
; INF MHz   ; 176.06 MHz      ; Controller:fsm|state[0] ; limit due to hold check ;
; 375.8 MHz ; 375.8 MHz       ; CLOCK_50                ;                         ;
+-----------+-----------------+-------------------------+-------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------------------------+
; Slow Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -1.704 ; -13.120       ;
; CLOCK_50                ; -1.661 ; -14.040       ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Slow Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -2.840 ; -5.759        ;
; CLOCK_50                ; -2.692 ; -5.739        ;
+-------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Slow Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.631 ; -24.849       ;
; Controller:fsm|state[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'Controller:fsm|state[0]'                                                                                                   ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -1.704 ; Controller:fsm|state[2] ; en3           ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; -0.187     ; 1.341      ;
; -1.158 ; Controller:fsm|state[2] ; r0[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.128      ; 2.252      ;
; -0.897 ; Controller:fsm|state[2] ; r1[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.126      ; 2.031      ;
; -0.840 ; Controller:fsm|state[2] ; r3[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.374      ; 1.576      ;
; -0.836 ; Controller:fsm|state[2] ; r0[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.129      ; 1.973      ;
; -0.820 ; Controller:fsm|state[2] ; r3[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.345      ; 1.488      ;
; -0.778 ; Controller:fsm|state[2] ; r3[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.345      ; 1.490      ;
; -0.657 ; Controller:fsm|state[2] ; r2[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.379      ; 1.356      ;
; -0.652 ; Controller:fsm|state[2] ; r2[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.549      ; 1.350      ;
; -0.643 ; Controller:fsm|state[2] ; r2[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.377      ; 1.357      ;
; -0.637 ; Controller:fsm|state[2] ; r3[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.377      ; 1.351      ;
; -0.617 ; Controller:fsm|state[2] ; r2[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 1.375      ; 1.355      ;
; -0.599 ; Controller:fsm|state[2] ; r0[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.130      ; 1.929      ;
; -0.593 ; Controller:fsm|state[2] ; r1[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.124      ; 1.921      ;
; -0.591 ; Controller:fsm|state[2] ; r0[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.128      ; 1.727      ;
; -0.549 ; Controller:fsm|state[2] ; r1[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.130      ; 1.879      ;
; -0.549 ; Controller:fsm|state[2] ; r1[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 1.124      ; 1.877      ;
; 0.544  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 2.698      ; 1.755      ;
; 0.804  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 2.310      ; 0.888      ;
; 1.044  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 2.698      ; 1.755      ;
; 1.304  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 2.310      ; 0.888      ;
; 2.551  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 3.800      ; 1.237      ;
; 3.051  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 3.800      ; 1.237      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                  ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                   ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; -1.661 ; Controller:fsm|state[2] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.025     ; 2.674      ;
; -1.586 ; r2[1]                   ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -1.404     ; 0.720      ;
; -1.303 ; Controller:fsm|state[1] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.030     ; 2.311      ;
; -1.285 ; Controller:fsm|state[2] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.005      ; 2.328      ;
; -1.132 ; r2[3]                   ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -1.574     ; 0.096      ;
; -0.992 ; Controller:fsm|state[2] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 2.030      ;
; -0.960 ; r3[2]                   ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -1.402     ; 0.096      ;
; -0.960 ; r2[0]                   ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -1.402     ; 0.096      ;
; -0.958 ; r2[2]                   ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -1.400     ; 0.096      ;
; -0.957 ; r3[0]                   ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -1.399     ; 0.096      ;
; -0.929 ; r3[1]                   ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -1.371     ; 0.096      ;
; -0.929 ; r3[3]                   ; nBitRegister:HiMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -1.371     ; 0.096      ;
; -0.927 ; Controller:fsm|state[1] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 1.965      ;
; -0.640 ; Controller:fsm|state[1] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.005     ; 1.673      ;
; -0.214 ; r1[1]                   ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -1.156     ; 0.096      ;
; -0.214 ; r0[1]                   ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -1.156     ; 0.096      ;
; -0.213 ; r0[2]                   ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -1.155     ; 0.096      ;
; -0.212 ; r0[0]                   ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -1.154     ; 0.096      ;
; -0.212 ; r0[3]                   ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -1.154     ; 0.096      ;
; -0.210 ; r1[2]                   ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -1.152     ; 0.096      ;
; -0.208 ; r1[0]                   ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -1.150     ; 0.096      ;
; -0.208 ; r1[3]                   ; nBitRegister:HiSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -1.150     ; 0.096      ;
; -0.014 ; en3                     ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.161      ; 1.213      ;
; -0.014 ; en3                     ; nBitRegister:HiMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.161      ; 1.213      ;
; -0.013 ; en3                     ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.162      ; 1.213      ;
; -0.013 ; en3                     ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.162      ; 1.213      ;
; -0.013 ; en3                     ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.162      ; 1.213      ;
; -0.013 ; en3                     ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.162      ; 1.213      ;
; -0.013 ; en3                     ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.162      ; 1.213      ;
; -0.013 ; en3                     ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.162      ; 1.213      ;
; 0.062  ; en1                     ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.549      ; 1.525      ;
; 0.062  ; en1                     ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.549      ; 1.525      ;
; 0.062  ; en1                     ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.549      ; 1.525      ;
; 0.062  ; en1                     ; nBitRegister:HiSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.549      ; 1.525      ;
; 0.062  ; en1                     ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.549      ; 1.525      ;
; 0.062  ; en1                     ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.549      ; 1.525      ;
; 0.062  ; en1                     ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.549      ; 1.525      ;
; 0.062  ; en1                     ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.549      ; 1.525      ;
; 1.515  ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.860      ; 2.160      ;
; 1.564  ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.890      ; 2.141      ;
; 1.660  ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 2.885      ; 2.040      ;
; 2.015  ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.860      ; 2.160      ;
; 2.064  ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.890      ; 2.141      ;
; 2.160  ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 2.885      ; 2.040      ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'Controller:fsm|state[0]'                                                                                                    ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -2.840 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 3.800      ; 1.237      ;
; -2.340 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 3.800      ; 1.237      ;
; -1.699 ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 2.310      ; 0.888      ;
; -1.220 ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 2.698      ; 1.755      ;
; -1.199 ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 2.310      ; 0.888      ;
; -0.720 ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 2.698      ; 1.755      ;
; 0.301  ; Controller:fsm|state[2] ; r2[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.549      ; 1.350      ;
; 0.474  ; Controller:fsm|state[2] ; r3[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.377      ; 1.351      ;
; 0.477  ; Controller:fsm|state[2] ; r2[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.379      ; 1.356      ;
; 0.480  ; Controller:fsm|state[2] ; r2[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.377      ; 1.357      ;
; 0.480  ; Controller:fsm|state[2] ; r2[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.375      ; 1.355      ;
; 0.599  ; Controller:fsm|state[2] ; r0[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.128      ; 1.727      ;
; 0.643  ; Controller:fsm|state[2] ; r3[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.345      ; 1.488      ;
; 0.645  ; Controller:fsm|state[2] ; r3[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.345      ; 1.490      ;
; 0.702  ; Controller:fsm|state[2] ; r3[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 1.374      ; 1.576      ;
; 0.749  ; Controller:fsm|state[2] ; r1[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.130      ; 1.879      ;
; 0.753  ; Controller:fsm|state[2] ; r1[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.124      ; 1.877      ;
; 0.797  ; Controller:fsm|state[2] ; r1[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.124      ; 1.921      ;
; 0.799  ; Controller:fsm|state[2] ; r0[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.130      ; 1.929      ;
; 0.844  ; Controller:fsm|state[2] ; r0[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.129      ; 1.973      ;
; 0.905  ; Controller:fsm|state[2] ; r1[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.126      ; 2.031      ;
; 1.124  ; Controller:fsm|state[2] ; r0[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 1.128      ; 2.252      ;
; 1.528  ; Controller:fsm|state[2] ; en3           ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; -0.187     ; 1.341      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                   ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                   ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; -2.692 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.860      ; 0.731      ;
; -2.192 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.860      ; 0.731      ;
; -1.639 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.890      ; 1.814      ;
; -1.408 ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 2.885      ; 2.040      ;
; -1.139 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.890      ; 1.814      ;
; -0.908 ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 2.885      ; 2.040      ;
; 0.445  ; Controller:fsm|state[1] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.731      ;
; 0.690  ; en1                     ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.549      ; 1.525      ;
; 0.690  ; en1                     ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.549      ; 1.525      ;
; 0.690  ; en1                     ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.549      ; 1.525      ;
; 0.690  ; en1                     ; nBitRegister:HiSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.549      ; 1.525      ;
; 0.690  ; en1                     ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.549      ; 1.525      ;
; 0.690  ; en1                     ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.549      ; 1.525      ;
; 0.690  ; en1                     ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.549      ; 1.525      ;
; 0.690  ; en1                     ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.549      ; 1.525      ;
; 0.765  ; en3                     ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.162      ; 1.213      ;
; 0.765  ; en3                     ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.162      ; 1.213      ;
; 0.765  ; en3                     ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.162      ; 1.213      ;
; 0.765  ; en3                     ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.162      ; 1.213      ;
; 0.765  ; en3                     ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.162      ; 1.213      ;
; 0.765  ; en3                     ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.162      ; 1.213      ;
; 0.766  ; en3                     ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.161      ; 1.213      ;
; 0.766  ; en3                     ; nBitRegister:HiMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.161      ; 1.213      ;
; 0.960  ; r1[0]                   ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -1.150     ; 0.096      ;
; 0.960  ; r1[3]                   ; nBitRegister:HiSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -1.150     ; 0.096      ;
; 0.962  ; r1[2]                   ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -1.152     ; 0.096      ;
; 0.964  ; r0[0]                   ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -1.154     ; 0.096      ;
; 0.964  ; r0[3]                   ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -1.154     ; 0.096      ;
; 0.965  ; r0[2]                   ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -1.155     ; 0.096      ;
; 0.966  ; r1[1]                   ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -1.156     ; 0.096      ;
; 0.966  ; r0[1]                   ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -1.156     ; 0.096      ;
; 1.218  ; Controller:fsm|state[1] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.030     ; 1.474      ;
; 1.392  ; Controller:fsm|state[1] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.005     ; 1.673      ;
; 1.568  ; Controller:fsm|state[2] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.025     ; 1.829      ;
; 1.681  ; r3[1]                   ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -1.371     ; 0.096      ;
; 1.681  ; r3[3]                   ; nBitRegister:HiMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -1.371     ; 0.096      ;
; 1.709  ; r3[0]                   ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -1.399     ; 0.096      ;
; 1.710  ; r2[2]                   ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -1.400     ; 0.096      ;
; 1.712  ; r3[2]                   ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -1.402     ; 0.096      ;
; 1.712  ; r2[0]                   ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -1.402     ; 0.096      ;
; 1.744  ; Controller:fsm|state[2] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 2.030      ;
; 1.841  ; Controller:fsm|state[2] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.005      ; 2.132      ;
; 1.884  ; r2[3]                   ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -1.574     ; 0.096      ;
; 2.338  ; r2[1]                   ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -1.404     ; 0.720      ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[0]   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[0]   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[1]   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[1]   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[2]   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[2]   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[3] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[2]|clk          ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'Controller:fsm|state[0]'                                                                    ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; Decoder0~5clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; Decoder0~5clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; Decoder0~5clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; Decoder0~5clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; Decoder0~5|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; Decoder0~5|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Decoder0~5|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Decoder0~5|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; LEDR[0]$latch              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; LEDR[0]$latch              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; LEDR[0]$latch|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; LEDR[0]$latch|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux19~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux19~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux19~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux19~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux21~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux21~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux21~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux21~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux23~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux23~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux23~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux23~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux2~0clkctrl|inclk[0]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux2~0clkctrl|inclk[0]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux2~0clkctrl|outclk       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux2~0clkctrl|outclk       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux2~0|combout             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux2~0|combout             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux2~0|datad               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux2~0|datad               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en1                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en1                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en1|dataa                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en1|dataa                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en3                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en3                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en3|dataa                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en3|dataa                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; fsm|state[0]|regout        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; fsm|state[0]|regout        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r0[0]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r0[0]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r0[1]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r0[1]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r0[2]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r0[2]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r0[3]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r0[3]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r1[0]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r1[0]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r1[1]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r1[1]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r1[2]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r1[2]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r1[3]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r1[3]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[0]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[0]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[1]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[1]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[2]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[2]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[3]|datab                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[3]|datab                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[0]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[0]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[1]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[1]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[2]                      ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 6.202 ; 6.202 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 5.934 ; 5.934 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 6.202 ; 6.202 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 6.122 ; 6.122 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 1.495 ; 1.495 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 1.116 ; 1.116 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.975 ; 0.975 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 1.125 ; 1.125 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 1.495 ; 1.495 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.642 ; 0.642 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.986 ; 0.986 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 1.255 ; 1.255 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.502 ; 0.502 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.757 ; 0.757 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.668 ; 0.668 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.533 ; 0.533 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.406 ; 0.406 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.489 ; 0.489 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.389 ; 0.389 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.757 ; 0.757 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.495 ; 0.495 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.231 ; 0.231 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -4.499 ; -4.499 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -4.499 ; -4.499 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -5.290 ; -5.290 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -5.498 ; -5.498 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.294  ; 0.294  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.124 ; -0.124 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.175 ; -0.175 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.133 ; -0.133 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.461 ; -0.461 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.154  ; 0.154  ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.186 ; -0.186 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.263 ; -0.263 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.294  ; 0.294  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.902  ; 0.902  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.495  ; 0.495  ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.647  ; 0.647  ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.731  ; 0.731  ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.862  ; 0.862  ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.749  ; 0.749  ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.420  ; 0.420  ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.668  ; 0.668  ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.902  ; 0.902  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 10.090 ; 10.090 ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 10.021 ; 10.021 ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 9.808  ; 9.808  ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 9.813  ; 9.813  ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 10.050 ; 10.050 ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 10.164 ; 10.164 ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 10.169 ; 10.169 ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 9.768  ; 9.768  ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 10.121 ; 10.121 ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 10.119 ; 10.119 ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 10.105 ; 10.105 ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 10.162 ; 10.162 ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 10.169 ; 10.169 ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 10.143 ; 10.143 ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 10.463 ; 10.463 ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 10.283 ; 10.283 ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 10.124 ; 10.124 ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 10.158 ; 10.158 ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 10.122 ; 10.122 ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 10.360 ; 10.360 ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 10.463 ; 10.463 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 10.447 ; 10.447 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 10.766 ; 10.766 ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 10.205 ; 10.205 ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 10.766 ; 10.766 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 10.632 ; 10.632 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 10.157 ; 10.157 ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 9.824  ; 9.824  ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 10.187 ; 10.187 ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 10.525 ; 10.525 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 11.186 ; 11.186 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 10.822 ; 10.822 ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 10.781 ; 10.781 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 10.825 ; 10.825 ; Rise       ; CLOCK_50                ;
;  LEDG[3]  ; CLOCK_50                ; 11.167 ; 11.167 ; Rise       ; CLOCK_50                ;
;  LEDG[4]  ; CLOCK_50                ; 11.142 ; 11.142 ; Rise       ; CLOCK_50                ;
;  LEDG[5]  ; CLOCK_50                ; 11.150 ; 11.150 ; Rise       ; CLOCK_50                ;
;  LEDG[6]  ; CLOCK_50                ; 11.186 ; 11.186 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.121  ; 7.041  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 6.737  ; 6.737  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;        ; 6.674  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 6.779  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ; 7.121  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ; 7.065  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ;        ; 7.040  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ;        ; 7.041  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 11.327 ; 11.327 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.731 ; 10.731 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.741 ; 10.741 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 11.152 ; 11.152 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 11.195 ; 11.195 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 11.327 ; 11.327 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 11.185 ; 11.185 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 11.185 ; 11.185 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 11.327 ; 11.327 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.731 ; 10.731 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 10.765 ; 10.765 ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.041  ; 7.121  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 6.737  ; 6.737  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 6.674  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;        ; 6.779  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ;        ; 7.121  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ;        ; 7.065  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ; 7.040  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ; 7.041  ;        ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 9.104  ; 9.104  ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 9.392  ; 9.392  ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 9.329  ; 9.329  ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 9.106  ; 9.106  ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 9.104  ; 9.104  ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 9.440  ; 9.440  ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 9.325  ; 9.325  ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 9.447  ; 9.447  ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 9.471  ; 9.471  ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 9.471  ; 9.471  ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 9.766  ; 9.766  ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 9.758  ; 9.758  ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 9.775  ; 9.775  ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 9.792  ; 9.792  ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 9.827  ; 9.827  ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 9.815  ; 9.815  ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 9.670  ; 9.670  ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 9.889  ; 9.889  ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 9.670  ; 9.670  ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 9.710  ; 9.710  ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 9.712  ; 9.712  ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 9.911  ; 9.911  ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 10.011 ; 10.011 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 10.040 ; 10.040 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 9.523  ; 9.523  ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 9.906  ; 9.906  ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 10.468 ; 10.468 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 10.421 ; 10.421 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 9.856  ; 9.856  ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 9.523  ; 9.523  ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 9.925  ; 9.925  ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 10.261 ; 10.261 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 9.202  ; 9.202  ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 9.208  ; 9.208  ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 10.781 ; 10.781 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 9.202  ; 9.202  ; Rise       ; CLOCK_50                ;
;  LEDG[3]  ; CLOCK_50                ; 9.547  ; 9.547  ; Rise       ; CLOCK_50                ;
;  LEDG[4]  ; CLOCK_50                ; 9.522  ; 9.522  ; Rise       ; CLOCK_50                ;
;  LEDG[5]  ; CLOCK_50                ; 9.533  ; 9.533  ; Rise       ; CLOCK_50                ;
;  LEDG[6]  ; CLOCK_50                ; 9.572  ; 9.572  ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 6.737  ; 6.674  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 6.737  ; 6.737  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;        ; 6.674  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 6.779  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ; 7.121  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ; 7.065  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ;        ; 7.040  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ;        ; 7.041  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 10.731 ; 10.731 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.731 ; 10.731 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.741 ; 10.741 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 11.152 ; 11.152 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 11.195 ; 11.195 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 11.327 ; 11.327 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 11.185 ; 11.185 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 11.185 ; 11.185 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 11.327 ; 11.327 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.731 ; 10.731 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 10.765 ; 10.765 ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 6.674  ; 6.737  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 6.737  ; 6.737  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 6.674  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;        ; 6.779  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ;        ; 7.121  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ;        ; 7.065  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ; 7.040  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ; 7.041  ;        ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------+
; Fast Model Setup Summary                         ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; Controller:fsm|state[0] ; -0.354 ; -0.354        ;
; CLOCK_50                ; -0.179 ; -0.179        ;
+-------------------------+--------+---------------+


+--------------------------------------------------+
; Fast Model Hold Summary                          ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.722 ; -10.335       ;
; Controller:fsm|state[0] ; -1.075 ; -2.113        ;
+-------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------------+
; Fast Model Minimum Pulse Width Summary           ;
+-------------------------+--------+---------------+
; Clock                   ; Slack  ; End Point TNS ;
+-------------------------+--------+---------------+
; CLOCK_50                ; -1.380 ; -20.380       ;
; Controller:fsm|state[0] ; 0.500  ; 0.000         ;
+-------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'Controller:fsm|state[0]'                                                                                                   ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -0.354 ; Controller:fsm|state[2] ; en3           ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; -0.402     ; 0.545      ;
; 0.281  ; Controller:fsm|state[2] ; r3[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.784      ; 0.602      ;
; 0.282  ; Controller:fsm|state[2] ; r3[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.802      ; 0.630      ;
; 0.293  ; Controller:fsm|state[2] ; r3[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.784      ; 0.604      ;
; 0.350  ; Controller:fsm|state[2] ; r2[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.805      ; 0.552      ;
; 0.353  ; Controller:fsm|state[2] ; r2[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.806      ; 0.551      ;
; 0.354  ; Controller:fsm|state[2] ; r3[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.805      ; 0.548      ;
; 0.361  ; Controller:fsm|state[2] ; r2[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.879      ; 0.547      ;
; 0.365  ; Controller:fsm|state[2] ; r2[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.500        ; 0.803      ; 0.549      ;
; 0.473  ; Controller:fsm|state[2] ; r0[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.702      ; 0.868      ;
; 0.522  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 1.001      ; 0.713      ;
; 0.563  ; Controller:fsm|state[2] ; r1[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.700      ; 0.798      ;
; 0.593  ; Controller:fsm|state[2] ; r0[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.703      ; 0.768      ;
; 0.604  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 0.837      ; 0.388      ;
; 0.675  ; Controller:fsm|state[2] ; r1[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.698      ; 0.752      ;
; 0.675  ; Controller:fsm|state[2] ; r0[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.703      ; 0.754      ;
; 0.680  ; Controller:fsm|state[2] ; r0[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.702      ; 0.683      ;
; 0.691  ; Controller:fsm|state[2] ; r1[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.698      ; 0.736      ;
; 0.692  ; Controller:fsm|state[2] ; r1[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 1.000        ; 0.704      ; 0.739      ;
; 1.022  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 1.001      ; 0.713      ;
; 1.104  ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 0.837      ; 0.388      ;
; 1.306  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.500        ; 1.441      ; 0.507      ;
; 1.806  ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 1.000        ; 1.441      ; 0.507      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                                  ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                   ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; -0.179 ; r2[1]                   ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.413     ; 0.298      ;
; 0.004  ; r2[3]                   ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.486     ; 0.042      ;
; 0.078  ; r3[2]                   ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.412     ; 0.042      ;
; 0.078  ; r2[0]                   ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.412     ; 0.042      ;
; 0.080  ; r2[2]                   ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.410     ; 0.042      ;
; 0.081  ; r3[0]                   ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.409     ; 0.042      ;
; 0.098  ; r3[1]                   ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.392     ; 0.042      ;
; 0.098  ; r3[3]                   ; nBitRegister:HiMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; -0.392     ; 0.042      ;
; 0.101  ; Controller:fsm|state[2] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.002      ; 0.933      ;
; 0.215  ; Controller:fsm|state[2] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.817      ;
; 0.250  ; Controller:fsm|state[1] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.000      ; 0.782      ;
; 0.358  ; Controller:fsm|state[1] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; -0.002     ; 0.672      ;
; 0.373  ; Controller:fsm|state[2] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.393      ; 1.052      ;
; 0.522  ; Controller:fsm|state[1] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 1.000        ; 0.391      ; 0.901      ;
; 0.678  ; r1[1]                   ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.312     ; 0.042      ;
; 0.679  ; r0[2]                   ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.311     ; 0.042      ;
; 0.679  ; r0[1]                   ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.311     ; 0.042      ;
; 0.680  ; r0[0]                   ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.310     ; 0.042      ;
; 0.680  ; r0[3]                   ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.310     ; 0.042      ;
; 0.682  ; r1[2]                   ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.308     ; 0.042      ;
; 0.684  ; r1[0]                   ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.306     ; 0.042      ;
; 0.684  ; r1[3]                   ; nBitRegister:HiSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; -0.306     ; 0.042      ;
; 1.248  ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.405      ; 0.830      ;
; 1.272  ; en3                     ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.794      ; 0.554      ;
; 1.272  ; en3                     ; nBitRegister:HiMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.794      ; 0.554      ;
; 1.273  ; en3                     ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.795      ; 0.554      ;
; 1.273  ; en3                     ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.795      ; 0.554      ;
; 1.273  ; en3                     ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.795      ; 0.554      ;
; 1.273  ; en3                     ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.795      ; 0.554      ;
; 1.273  ; en3                     ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.795      ; 0.554      ;
; 1.273  ; en3                     ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.795      ; 0.554      ;
; 1.276  ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.403      ; 0.800      ;
; 1.332  ; en1                     ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.958      ; 0.658      ;
; 1.332  ; en1                     ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.958      ; 0.658      ;
; 1.332  ; en1                     ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.958      ; 0.658      ;
; 1.332  ; en1                     ; nBitRegister:HiSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.958      ; 0.658      ;
; 1.332  ; en1                     ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.958      ; 0.658      ;
; 1.332  ; en1                     ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.958      ; 0.658      ;
; 1.332  ; en1                     ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.958      ; 0.658      ;
; 1.332  ; en1                     ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 0.958      ; 0.658      ;
; 1.611  ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.500        ; 1.796      ; 0.858      ;
; 1.748  ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.405      ; 0.830      ;
; 1.776  ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.403      ; 0.800      ;
; 2.111  ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 1.000        ; 1.796      ; 0.858      ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                   ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                   ; Launch Clock            ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+
; -1.722 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.796      ; 0.367      ;
; -1.222 ; Controller:fsm|state[0] ; Controller:fsm|state[0]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.796      ; 0.367      ;
; -0.959 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.405      ; 0.739      ;
; -0.896 ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 1.403      ; 0.800      ;
; -0.459 ; Controller:fsm|state[0] ; Controller:fsm|state[1]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.405      ; 0.739      ;
; -0.452 ; en1                     ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.958      ; 0.658      ;
; -0.452 ; en1                     ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.958      ; 0.658      ;
; -0.452 ; en1                     ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.958      ; 0.658      ;
; -0.452 ; en1                     ; nBitRegister:HiSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.958      ; 0.658      ;
; -0.452 ; en1                     ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.958      ; 0.658      ;
; -0.452 ; en1                     ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.958      ; 0.658      ;
; -0.452 ; en1                     ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.958      ; 0.658      ;
; -0.452 ; en1                     ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.958      ; 0.658      ;
; -0.396 ; Controller:fsm|state[0] ; Controller:fsm|state[2]   ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; 1.403      ; 0.800      ;
; -0.393 ; en3                     ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.795      ; 0.554      ;
; -0.393 ; en3                     ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.795      ; 0.554      ;
; -0.393 ; en3                     ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.795      ; 0.554      ;
; -0.393 ; en3                     ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.795      ; 0.554      ;
; -0.393 ; en3                     ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.795      ; 0.554      ;
; -0.393 ; en3                     ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.795      ; 0.554      ;
; -0.392 ; en3                     ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.794      ; 0.554      ;
; -0.392 ; en3                     ; nBitRegister:HiMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; 0.794      ; 0.554      ;
; 0.062  ; Controller:fsm|state[1] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.391      ; 0.605      ;
; 0.196  ; r1[0]                   ; nBitRegister:HiSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.306     ; 0.042      ;
; 0.196  ; r1[3]                   ; nBitRegister:HiSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.306     ; 0.042      ;
; 0.198  ; r1[2]                   ; nBitRegister:HiSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.308     ; 0.042      ;
; 0.200  ; r0[0]                   ; nBitRegister:LoSec|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.310     ; 0.042      ;
; 0.200  ; r0[3]                   ; nBitRegister:LoSec|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.310     ; 0.042      ;
; 0.201  ; r0[2]                   ; nBitRegister:LoSec|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.311     ; 0.042      ;
; 0.201  ; r0[1]                   ; nBitRegister:LoSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.311     ; 0.042      ;
; 0.202  ; r1[1]                   ; nBitRegister:HiSec|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; 0.000        ; -0.312     ; 0.042      ;
; 0.205  ; Controller:fsm|state[2] ; Controller:fsm|state[0]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.393      ; 0.750      ;
; 0.215  ; Controller:fsm|state[1] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.522  ; Controller:fsm|state[1] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; -0.002     ; 0.672      ;
; 0.665  ; Controller:fsm|state[2] ; Controller:fsm|state[2]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.000      ; 0.817      ;
; 0.689  ; Controller:fsm|state[2] ; Controller:fsm|state[1]   ; CLOCK_50                ; CLOCK_50    ; 0.000        ; 0.002      ; 0.843      ;
; 0.782  ; r3[1]                   ; nBitRegister:HiMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.392     ; 0.042      ;
; 0.782  ; r3[3]                   ; nBitRegister:HiMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.392     ; 0.042      ;
; 0.799  ; r3[0]                   ; nBitRegister:HiMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.409     ; 0.042      ;
; 0.800  ; r2[2]                   ; nBitRegister:LoMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.410     ; 0.042      ;
; 0.802  ; r3[2]                   ; nBitRegister:HiMin|out[2] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.412     ; 0.042      ;
; 0.802  ; r2[0]                   ; nBitRegister:LoMin|out[0] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.412     ; 0.042      ;
; 0.876  ; r2[3]                   ; nBitRegister:LoMin|out[3] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.486     ; 0.042      ;
; 1.059  ; r2[1]                   ; nBitRegister:LoMin|out[1] ; Controller:fsm|state[0] ; CLOCK_50    ; -0.500       ; -0.413     ; 0.298      ;
+--------+-------------------------+---------------------------+-------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'Controller:fsm|state[0]'                                                                                                    ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node       ; Launch Clock            ; Latch Clock             ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+
; -1.075 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 1.441      ; 0.507      ;
; -0.590 ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 0.837      ; 0.388      ;
; -0.575 ; Controller:fsm|state[0] ; LEDR[0]$latch ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 1.441      ; 0.507      ;
; -0.429 ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 0.000        ; 1.001      ; 0.713      ;
; -0.090 ; Controller:fsm|state[0] ; en1           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 0.837      ; 0.388      ;
; -0.019 ; Controller:fsm|state[2] ; r0[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.702      ; 0.683      ;
; 0.035  ; Controller:fsm|state[2] ; r1[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.704      ; 0.739      ;
; 0.038  ; Controller:fsm|state[2] ; r1[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.698      ; 0.736      ;
; 0.051  ; Controller:fsm|state[2] ; r0[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.703      ; 0.754      ;
; 0.054  ; Controller:fsm|state[2] ; r1[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.698      ; 0.752      ;
; 0.065  ; Controller:fsm|state[2] ; r0[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.703      ; 0.768      ;
; 0.071  ; Controller:fsm|state[0] ; en3           ; Controller:fsm|state[0] ; Controller:fsm|state[0] ; -0.500       ; 1.001      ; 0.713      ;
; 0.098  ; Controller:fsm|state[2] ; r1[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.700      ; 0.798      ;
; 0.166  ; Controller:fsm|state[2] ; r0[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; 0.702      ; 0.868      ;
; 0.168  ; Controller:fsm|state[2] ; r2[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.879      ; 0.547      ;
; 0.243  ; Controller:fsm|state[2] ; r3[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.805      ; 0.548      ;
; 0.245  ; Controller:fsm|state[2] ; r2[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.806      ; 0.551      ;
; 0.246  ; Controller:fsm|state[2] ; r2[2]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.803      ; 0.549      ;
; 0.247  ; Controller:fsm|state[2] ; r2[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.805      ; 0.552      ;
; 0.318  ; Controller:fsm|state[2] ; r3[1]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.784      ; 0.602      ;
; 0.320  ; Controller:fsm|state[2] ; r3[3]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.784      ; 0.604      ;
; 0.328  ; Controller:fsm|state[2] ; r3[0]         ; CLOCK_50                ; Controller:fsm|state[0] ; -0.500       ; 0.802      ; 0.630      ;
; 0.947  ; Controller:fsm|state[2] ; en3           ; CLOCK_50                ; Controller:fsm|state[0] ; 0.000        ; -0.402     ; 0.545      ;
+--------+-------------------------+---------------+-------------------------+-------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; Controller:fsm|state[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; Controller:fsm|state[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiMin|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:HiSec|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoMin|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; nBitRegister:LoSec|out[3] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; HiSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; HiSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoMin|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LoSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LoSec|out[3]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[0]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[1]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; fsm|state[2]|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; fsm|state[2]|clk          ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'Controller:fsm|state[0]'                                                                    ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                   ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; Decoder0~5clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; Decoder0~5clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; Decoder0~5clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; Decoder0~5clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; Decoder0~5|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; Decoder0~5|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Decoder0~5|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Decoder0~5|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; LEDR[0]$latch              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; LEDR[0]$latch              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; LEDR[0]$latch|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; LEDR[0]$latch|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux19~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux19~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux19~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux19~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux21~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux21~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux21~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux21~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux23~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux23~0|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux23~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux23~0|datac              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux2~0clkctrl|inclk[0]     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux2~0clkctrl|inclk[0]     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux2~0clkctrl|outclk       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux2~0clkctrl|outclk       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux2~0|combout             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux2~0|combout             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; Mux2~0|datad               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; Mux2~0|datad               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en1                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en1                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en1|dataa                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en1|dataa                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en3                        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en3                        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; en3|dataa                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; en3|dataa                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; fsm|state[0]|regout        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; fsm|state[0]|regout        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r0[0]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r0[0]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r0[1]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r0[1]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r0[2]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r0[2]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r0[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r0[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r0[3]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r0[3]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r1[0]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r1[0]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r1[1]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r1[1]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r1[2]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r1[2]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r1[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r1[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r1[3]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r1[3]|datad                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[0]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[0]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[1]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[1]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[2]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[2]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r2[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r2[3]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r2[3]|datab                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r2[3]|datab                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[0]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[0]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[0]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[1]                      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Rise       ; r3[1]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Rise       ; r3[1]|datac                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; Controller:fsm|state[0] ; Fall       ; r3[2]                      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; Controller:fsm|state[0] ; Fall       ; r3[2]                      ;
+-------+--------------+----------------+------------------+-------------------------+------------+----------------------------+


+----------------------------------------------------------------------------------------------+
; Setup Times                                                                                  ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 2.942  ; 2.942  ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 2.866  ; 2.866  ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 2.942  ; 2.942  ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 2.918  ; 2.918  ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.155  ; 0.155  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.002  ; 0.002  ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.009 ; -0.009 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.033  ; 0.033  ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.155  ; 0.155  ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.185 ; -0.185 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.051 ; -0.051 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.033  ; 0.033  ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; -0.262 ; -0.262 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; -0.140 ; -0.140 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; -0.168 ; -0.168 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; -0.187 ; -0.187 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; -0.239 ; -0.239 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; -0.233 ; -0.233 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; -0.292 ; -0.292 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; -0.140 ; -0.140 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; -0.258 ; -0.258 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; -0.364 ; -0.364 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -2.160 ; -2.160 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -2.160 ; -2.160 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -2.550 ; -2.550 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -2.526 ; -2.526 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.533  ; 0.533  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.337  ; 0.337  ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.283  ; 0.283  ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.309  ; 0.309  ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.206  ; 0.206  ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.456  ; 0.456  ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.324  ; 0.324  ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.306  ; 0.306  ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.533  ; 0.533  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.751  ; 0.751  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.571  ; 0.571  ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.589  ; 0.589  ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.628  ; 0.628  ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.704  ; 0.704  ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.682  ; 0.682  ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.541  ; 0.541  ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.661  ; 0.661  ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.751  ; 0.751  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                      ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 5.052 ; 5.052 ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 4.994 ; 4.994 ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 4.984 ; 4.984 ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 4.918 ; 4.918 ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 4.914 ; 4.914 ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 5.050 ; 5.050 ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 5.002 ; 5.002 ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 5.052 ; 5.052 ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 5.056 ; 5.056 ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 4.917 ; 4.917 ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 5.024 ; 5.024 ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 4.996 ; 4.996 ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 5.008 ; 5.008 ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 5.022 ; 5.022 ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 5.056 ; 5.056 ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 5.047 ; 5.047 ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 5.107 ; 5.107 ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 5.033 ; 5.033 ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 4.961 ; 4.961 ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 5.002 ; 5.002 ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 4.994 ; 4.994 ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 5.047 ; 5.047 ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 5.092 ; 5.092 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 5.107 ; 5.107 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 5.295 ; 5.295 ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 4.996 ; 4.996 ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 5.295 ; 5.295 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 5.263 ; 5.263 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 4.961 ; 4.961 ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 4.827 ; 4.827 ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 5.010 ; 5.010 ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 5.143 ; 5.143 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 4.986 ; 4.986 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 4.834 ; 4.834 ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 4.835 ; 4.835 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 4.866 ; 4.866 ; Rise       ; CLOCK_50                ;
;  LEDG[3]  ; CLOCK_50                ; 4.971 ; 4.971 ; Rise       ; CLOCK_50                ;
;  LEDG[4]  ; CLOCK_50                ; 4.985 ; 4.985 ; Rise       ; CLOCK_50                ;
;  LEDG[5]  ; CLOCK_50                ; 4.969 ; 4.969 ; Rise       ; CLOCK_50                ;
;  LEDG[6]  ; CLOCK_50                ; 4.986 ; 4.986 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 3.136 ; 3.148 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 2.995 ; 2.995 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;       ; 2.971 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 3.005 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ; 3.136 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ; 3.127 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ;       ; 3.133 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ;       ; 3.148 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.937 ; 4.937 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.622 ; 4.622 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.624 ; 4.624 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.811 ; 4.811 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.849 ; 4.849 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.937 ; 4.937 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.839 ; 4.839 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.839 ; 4.839 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.937 ; 4.937 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.614 ; 4.614 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.642 ; 4.642 ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 3.148 ; 3.136 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 2.995 ; 2.995 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 2.971 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;       ; 3.005 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ;       ; 3.136 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ;       ; 3.127 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ; 3.133 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ; 3.148 ;       ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 4.615 ; 4.615 ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 4.704 ; 4.704 ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 4.694 ; 4.694 ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 4.618 ; 4.618 ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 4.615 ; 4.615 ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 4.742 ; 4.742 ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 4.693 ; 4.693 ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 4.747 ; 4.747 ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 4.738 ; 4.738 ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 4.738 ; 4.738 ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 4.820 ; 4.820 ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 4.816 ; 4.816 ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 4.829 ; 4.829 ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 4.844 ; 4.844 ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 4.878 ; 4.878 ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 4.869 ; 4.869 ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 4.835 ; 4.835 ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 4.907 ; 4.907 ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 4.835 ; 4.835 ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 4.875 ; 4.875 ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 4.876 ; 4.876 ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 4.932 ; 4.932 ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 4.965 ; 4.965 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 4.993 ; 4.993 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 4.719 ; 4.719 ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 4.885 ; 4.885 ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 5.178 ; 5.178 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 5.150 ; 5.150 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 4.851 ; 4.851 ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 4.719 ; 4.719 ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 4.899 ; 4.899 ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 5.032 ; 5.032 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 4.264 ; 4.264 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 4.270 ; 4.270 ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 4.835 ; 4.835 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 4.264 ; 4.264 ; Rise       ; CLOCK_50                ;
;  LEDG[3]  ; CLOCK_50                ; 4.398 ; 4.398 ; Rise       ; CLOCK_50                ;
;  LEDG[4]  ; CLOCK_50                ; 4.388 ; 4.388 ; Rise       ; CLOCK_50                ;
;  LEDG[5]  ; CLOCK_50                ; 4.398 ; 4.398 ; Rise       ; CLOCK_50                ;
;  LEDG[6]  ; CLOCK_50                ; 4.419 ; 4.419 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 2.995 ; 2.971 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 2.995 ; 2.995 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;       ; 2.971 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 3.005 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ; 3.136 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ; 3.127 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ;       ; 3.133 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ;       ; 3.148 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.614 ; 4.614 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.622 ; 4.622 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.624 ; 4.624 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.811 ; 4.811 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.849 ; 4.849 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.937 ; 4.937 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.839 ; 4.839 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.839 ; 4.839 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.937 ; 4.937 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.614 ; 4.614 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.642 ; 4.642 ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 2.971 ; 2.995 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 2.995 ; 2.995 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 2.971 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;       ; 3.005 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ;       ; 3.136 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ;       ; 3.127 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ; 3.133 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ; 3.148 ;       ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+-----------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                     ;
+--------------------------+---------+---------+----------+---------+---------------------+
; Clock                    ; Setup   ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+--------------------------+---------+---------+----------+---------+---------------------+
; Worst-case Slack         ; -1.704  ; -2.840  ; N/A      ; N/A     ; -1.631              ;
;  CLOCK_50                ; -1.661  ; -2.692  ; N/A      ; N/A     ; -1.631              ;
;  Controller:fsm|state[0] ; -1.704  ; -2.840  ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS          ; -27.16  ; -12.448 ; 0.0      ; 0.0     ; -24.849             ;
;  CLOCK_50                ; -14.040 ; -10.335 ; N/A      ; N/A     ; -24.849             ;
;  Controller:fsm|state[0] ; -13.120 ; -5.759  ; N/A      ; N/A     ; 0.000               ;
+--------------------------+---------+---------+----------+---------+---------------------+


+--------------------------------------------------------------------------------------------+
; Setup Times                                                                                ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; 6.202 ; 6.202 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; 5.934 ; 5.934 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; 6.202 ; 6.202 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; 6.122 ; 6.122 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 1.495 ; 1.495 ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 1.116 ; 1.116 ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.975 ; 0.975 ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 1.125 ; 1.125 ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 1.495 ; 1.495 ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.642 ; 0.642 ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.986 ; 0.986 ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 1.255 ; 1.255 ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.502 ; 0.502 ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.757 ; 0.757 ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.668 ; 0.668 ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.533 ; 0.533 ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.406 ; 0.406 ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.489 ; 0.489 ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.389 ; 0.389 ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.757 ; 0.757 ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.495 ; 0.495 ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.231 ; 0.231 ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Hold Times                                                                                   ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; KEY[*]    ; CLOCK_50                ; -2.160 ; -2.160 ; Rise       ; CLOCK_50                ;
;  KEY[0]   ; CLOCK_50                ; -2.160 ; -2.160 ; Rise       ; CLOCK_50                ;
;  KEY[1]   ; CLOCK_50                ; -2.550 ; -2.550 ; Rise       ; CLOCK_50                ;
;  KEY[2]   ; CLOCK_50                ; -2.526 ; -2.526 ; Rise       ; CLOCK_50                ;
; SW[*]     ; Controller:fsm|state[0] ; 0.533  ; 0.533  ; Rise       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.337  ; 0.337  ; Rise       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.283  ; 0.283  ; Rise       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.309  ; 0.309  ; Rise       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.206  ; 0.206  ; Rise       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.456  ; 0.456  ; Rise       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.324  ; 0.324  ; Rise       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.306  ; 0.306  ; Rise       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.533  ; 0.533  ; Rise       ; Controller:fsm|state[0] ;
; SW[*]     ; Controller:fsm|state[0] ; 0.902  ; 0.902  ; Fall       ; Controller:fsm|state[0] ;
;  SW[0]    ; Controller:fsm|state[0] ; 0.571  ; 0.571  ; Fall       ; Controller:fsm|state[0] ;
;  SW[1]    ; Controller:fsm|state[0] ; 0.647  ; 0.647  ; Fall       ; Controller:fsm|state[0] ;
;  SW[2]    ; Controller:fsm|state[0] ; 0.731  ; 0.731  ; Fall       ; Controller:fsm|state[0] ;
;  SW[3]    ; Controller:fsm|state[0] ; 0.862  ; 0.862  ; Fall       ; Controller:fsm|state[0] ;
;  SW[4]    ; Controller:fsm|state[0] ; 0.749  ; 0.749  ; Fall       ; Controller:fsm|state[0] ;
;  SW[5]    ; Controller:fsm|state[0] ; 0.541  ; 0.541  ; Fall       ; Controller:fsm|state[0] ;
;  SW[6]    ; Controller:fsm|state[0] ; 0.668  ; 0.668  ; Fall       ; Controller:fsm|state[0] ;
;  SW[7]    ; Controller:fsm|state[0] ; 0.902  ; 0.902  ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+----------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                        ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise   ; Fall   ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+--------+--------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 10.090 ; 10.090 ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 10.021 ; 10.021 ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 9.808  ; 9.808  ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 9.813  ; 9.813  ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 10.251 ; 10.251 ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 10.050 ; 10.050 ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 10.164 ; 10.164 ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 10.169 ; 10.169 ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 9.768  ; 9.768  ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 10.121 ; 10.121 ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 10.119 ; 10.119 ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 10.105 ; 10.105 ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 10.162 ; 10.162 ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 10.169 ; 10.169 ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 10.143 ; 10.143 ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 10.463 ; 10.463 ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 10.283 ; 10.283 ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 10.124 ; 10.124 ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 10.158 ; 10.158 ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 10.122 ; 10.122 ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 10.360 ; 10.360 ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 10.463 ; 10.463 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 10.447 ; 10.447 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 10.766 ; 10.766 ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 10.205 ; 10.205 ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 10.766 ; 10.766 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 10.632 ; 10.632 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 10.157 ; 10.157 ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 9.824  ; 9.824  ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 10.187 ; 10.187 ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 10.525 ; 10.525 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 11.186 ; 11.186 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 10.822 ; 10.822 ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 10.781 ; 10.781 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 10.825 ; 10.825 ; Rise       ; CLOCK_50                ;
;  LEDG[3]  ; CLOCK_50                ; 11.167 ; 11.167 ; Rise       ; CLOCK_50                ;
;  LEDG[4]  ; CLOCK_50                ; 11.142 ; 11.142 ; Rise       ; CLOCK_50                ;
;  LEDG[5]  ; CLOCK_50                ; 11.150 ; 11.150 ; Rise       ; CLOCK_50                ;
;  LEDG[6]  ; CLOCK_50                ; 11.186 ; 11.186 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.121  ; 7.041  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 6.737  ; 6.737  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;        ; 6.674  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 6.779  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ; 7.121  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ; 7.065  ;        ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ;        ; 7.040  ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ;        ; 7.041  ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 11.327 ; 11.327 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 10.731 ; 10.731 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 10.741 ; 10.741 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 11.152 ; 11.152 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 11.195 ; 11.195 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 11.327 ; 11.327 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 11.185 ; 11.185 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 11.185 ; 11.185 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 11.327 ; 11.327 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 10.731 ; 10.731 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 10.765 ; 10.765 ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 7.041  ; 7.121  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 6.737  ; 6.737  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 6.674  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;        ; 6.779  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ;        ; 7.121  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ;        ; 7.065  ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ; 7.040  ;        ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ; 7.041  ;        ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+--------+--------+------------+-------------------------+


+--------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                              ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; Data Port ; Clock Port              ; Rise  ; Fall  ; Clock Edge ; Clock Reference         ;
+-----------+-------------------------+-------+-------+------------+-------------------------+
; HEX0[*]   ; CLOCK_50                ; 4.615 ; 4.615 ; Rise       ; CLOCK_50                ;
;  HEX0[0]  ; CLOCK_50                ; 4.704 ; 4.704 ; Rise       ; CLOCK_50                ;
;  HEX0[1]  ; CLOCK_50                ; 4.694 ; 4.694 ; Rise       ; CLOCK_50                ;
;  HEX0[2]  ; CLOCK_50                ; 4.618 ; 4.618 ; Rise       ; CLOCK_50                ;
;  HEX0[3]  ; CLOCK_50                ; 4.615 ; 4.615 ; Rise       ; CLOCK_50                ;
;  HEX0[4]  ; CLOCK_50                ; 4.742 ; 4.742 ; Rise       ; CLOCK_50                ;
;  HEX0[5]  ; CLOCK_50                ; 4.693 ; 4.693 ; Rise       ; CLOCK_50                ;
;  HEX0[6]  ; CLOCK_50                ; 4.747 ; 4.747 ; Rise       ; CLOCK_50                ;
; HEX1[*]   ; CLOCK_50                ; 4.738 ; 4.738 ; Rise       ; CLOCK_50                ;
;  HEX1[0]  ; CLOCK_50                ; 4.738 ; 4.738 ; Rise       ; CLOCK_50                ;
;  HEX1[1]  ; CLOCK_50                ; 4.820 ; 4.820 ; Rise       ; CLOCK_50                ;
;  HEX1[2]  ; CLOCK_50                ; 4.816 ; 4.816 ; Rise       ; CLOCK_50                ;
;  HEX1[3]  ; CLOCK_50                ; 4.829 ; 4.829 ; Rise       ; CLOCK_50                ;
;  HEX1[4]  ; CLOCK_50                ; 4.844 ; 4.844 ; Rise       ; CLOCK_50                ;
;  HEX1[5]  ; CLOCK_50                ; 4.878 ; 4.878 ; Rise       ; CLOCK_50                ;
;  HEX1[6]  ; CLOCK_50                ; 4.869 ; 4.869 ; Rise       ; CLOCK_50                ;
; HEX2[*]   ; CLOCK_50                ; 4.835 ; 4.835 ; Rise       ; CLOCK_50                ;
;  HEX2[0]  ; CLOCK_50                ; 4.907 ; 4.907 ; Rise       ; CLOCK_50                ;
;  HEX2[1]  ; CLOCK_50                ; 4.835 ; 4.835 ; Rise       ; CLOCK_50                ;
;  HEX2[2]  ; CLOCK_50                ; 4.875 ; 4.875 ; Rise       ; CLOCK_50                ;
;  HEX2[3]  ; CLOCK_50                ; 4.876 ; 4.876 ; Rise       ; CLOCK_50                ;
;  HEX2[4]  ; CLOCK_50                ; 4.932 ; 4.932 ; Rise       ; CLOCK_50                ;
;  HEX2[5]  ; CLOCK_50                ; 4.965 ; 4.965 ; Rise       ; CLOCK_50                ;
;  HEX2[6]  ; CLOCK_50                ; 4.993 ; 4.993 ; Rise       ; CLOCK_50                ;
; HEX3[*]   ; CLOCK_50                ; 4.719 ; 4.719 ; Rise       ; CLOCK_50                ;
;  HEX3[0]  ; CLOCK_50                ; 4.885 ; 4.885 ; Rise       ; CLOCK_50                ;
;  HEX3[1]  ; CLOCK_50                ; 5.178 ; 5.178 ; Rise       ; CLOCK_50                ;
;  HEX3[2]  ; CLOCK_50                ; 5.150 ; 5.150 ; Rise       ; CLOCK_50                ;
;  HEX3[3]  ; CLOCK_50                ; 4.851 ; 4.851 ; Rise       ; CLOCK_50                ;
;  HEX3[4]  ; CLOCK_50                ; 4.719 ; 4.719 ; Rise       ; CLOCK_50                ;
;  HEX3[5]  ; CLOCK_50                ; 4.899 ; 4.899 ; Rise       ; CLOCK_50                ;
;  HEX3[6]  ; CLOCK_50                ; 5.032 ; 5.032 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; CLOCK_50                ; 4.264 ; 4.264 ; Rise       ; CLOCK_50                ;
;  LEDG[0]  ; CLOCK_50                ; 4.270 ; 4.270 ; Rise       ; CLOCK_50                ;
;  LEDG[1]  ; CLOCK_50                ; 4.835 ; 4.835 ; Rise       ; CLOCK_50                ;
;  LEDG[2]  ; CLOCK_50                ; 4.264 ; 4.264 ; Rise       ; CLOCK_50                ;
;  LEDG[3]  ; CLOCK_50                ; 4.398 ; 4.398 ; Rise       ; CLOCK_50                ;
;  LEDG[4]  ; CLOCK_50                ; 4.388 ; 4.388 ; Rise       ; CLOCK_50                ;
;  LEDG[5]  ; CLOCK_50                ; 4.398 ; 4.398 ; Rise       ; CLOCK_50                ;
;  LEDG[6]  ; CLOCK_50                ; 4.419 ; 4.419 ; Rise       ; CLOCK_50                ;
; LEDG[*]   ; Controller:fsm|state[0] ; 2.995 ; 2.971 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 2.995 ; 2.995 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ;       ; 2.971 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ; 3.005 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ; 3.136 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ; 3.127 ;       ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ;       ; 3.133 ; Rise       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ;       ; 3.148 ; Rise       ; Controller:fsm|state[0] ;
; LEDR[*]   ; Controller:fsm|state[0] ; 4.614 ; 4.614 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[0]  ; Controller:fsm|state[0] ; 4.622 ; 4.622 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[1]  ; Controller:fsm|state[0] ; 4.624 ; 4.624 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[2]  ; Controller:fsm|state[0] ; 4.811 ; 4.811 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[3]  ; Controller:fsm|state[0] ; 4.849 ; 4.849 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[4]  ; Controller:fsm|state[0] ; 4.937 ; 4.937 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[5]  ; Controller:fsm|state[0] ; 4.839 ; 4.839 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[6]  ; Controller:fsm|state[0] ; 4.839 ; 4.839 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[7]  ; Controller:fsm|state[0] ; 4.937 ; 4.937 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[8]  ; Controller:fsm|state[0] ; 4.614 ; 4.614 ; Rise       ; Controller:fsm|state[0] ;
;  LEDR[9]  ; Controller:fsm|state[0] ; 4.642 ; 4.642 ; Rise       ; Controller:fsm|state[0] ;
; LEDG[*]   ; Controller:fsm|state[0] ; 2.971 ; 2.995 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[0]  ; Controller:fsm|state[0] ; 2.995 ; 2.995 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[1]  ; Controller:fsm|state[0] ; 2.971 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[2]  ; Controller:fsm|state[0] ;       ; 3.005 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[3]  ; Controller:fsm|state[0] ;       ; 3.136 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[4]  ; Controller:fsm|state[0] ;       ; 3.127 ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[5]  ; Controller:fsm|state[0] ; 3.133 ;       ; Fall       ; Controller:fsm|state[0] ;
;  LEDG[6]  ; Controller:fsm|state[0] ; 3.148 ;       ; Fall       ; Controller:fsm|state[0] ;
+-----------+-------------------------+-------+-------+------------+-------------------------+


+-----------------------------------------------------------------------------------------------+
; Setup Transfers                                                                               ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; CLOCK_50                ; CLOCK_50                ; 13       ; 0        ; 0        ; 0        ;
; Controller:fsm|state[0] ; CLOCK_50                ; 30       ; 14       ; 0        ; 0        ;
; CLOCK_50                ; Controller:fsm|state[0] ; 9        ; 0        ; 8        ; 0        ;
; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 3        ; 3        ; 0        ; 0        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; From Clock              ; To Clock                ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------------+-------------------------+----------+----------+----------+----------+
; CLOCK_50                ; CLOCK_50                ; 13       ; 0        ; 0        ; 0        ;
; Controller:fsm|state[0] ; CLOCK_50                ; 30       ; 14       ; 0        ; 0        ;
; CLOCK_50                ; Controller:fsm|state[0] ; 9        ; 0        ; 8        ; 0        ;
; Controller:fsm|state[0] ; Controller:fsm|state[0] ; 3        ; 3        ; 0        ; 0        ;
+-------------------------+-------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 11    ; 11   ;
; Unconstrained Input Port Paths  ; 24    ; 24   ;
; Unconstrained Output Ports      ; 45    ; 45   ;
; Unconstrained Output Port Paths ; 142   ; 142  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Wed Sep 30 22:40:52 2015
Info: Command: quartus_sta EggTimer -c EggTimer
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 19 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'EggTimer.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
    Info (332105): create_clock -period 1.000 -name Controller:fsm|state[0] Controller:fsm|state[0]
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux23~0  from: datac  to: combout
    Info (332098): Cell: Mux2~0  from: datad  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.704
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.704       -13.120 Controller:fsm|state[0] 
    Info (332119):    -1.661       -14.040 CLOCK_50 
Info (332146): Worst-case hold slack is -2.840
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.840        -5.759 Controller:fsm|state[0] 
    Info (332119):    -2.692        -5.739 CLOCK_50 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631       -24.849 CLOCK_50 
    Info (332119):     0.500         0.000 Controller:fsm|state[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux23~0  from: datac  to: combout
    Info (332098): Cell: Mux2~0  from: datad  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.354
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.354        -0.354 Controller:fsm|state[0] 
    Info (332119):    -0.179        -0.179 CLOCK_50 
Info (332146): Worst-case hold slack is -1.722
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.722       -10.335 CLOCK_50 
    Info (332119):    -1.075        -2.113 Controller:fsm|state[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -20.380 CLOCK_50 
    Info (332119):     0.500         0.000 Controller:fsm|state[0] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 422 megabytes
    Info: Processing ended: Wed Sep 30 22:40:55 2015
    Info: Elapsed time: 00:00:03
    Info: Total CPU time (on all processors): 00:00:01


